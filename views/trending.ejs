<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Trending Videos - VideoApp</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="/css/main.css">
    <style>
        .trending-container {
            min-height: 100vh;
            background: #000;
            color: #fff;
            padding: 80px 20px 20px;
        }

        .trending-header {
            max-width: 1200px;
            margin: 0 auto 40px;
            text-align: center;
        }

        .trending-header h1 {
            font-size: 48px;
            font-weight: bold;
            margin-bottom: 10px;
            background: linear-gradient(45deg, #fe2c55, #ff6b35);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .trending-subtitle {
            font-size: 18px;
            color: #888;
            margin-bottom: 30px;
        }

        .time-filters {
            display: flex;
            justify-content: center;
            gap: 15px;
            margin-bottom: 40px;
            flex-wrap: wrap;
        }

        .time-filter {
            padding: 12px 24px;
            background: rgba(255, 255, 255, 0.1);
            border: 2px solid transparent;
            border-radius: 25px;
            color: #fff;
            text-decoration: none;
            font-weight: 600;
            transition: all 0.3s;
            cursor: pointer;
        }

        .time-filter:hover,
        .time-filter.active {
            background: #fe2c55;
            border-color: #fe2c55;
            transform: translateY(-2px);
        }

        .trending-grid {
            max-width: 1200px;
            margin: 0 auto;
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
            gap: 25px;
        }

        .trending-item {
            background: rgba(255, 255, 255, 0.05);
            border-radius: 20px;
            overflow: hidden;
            transition: all 0.3s;
            cursor: pointer;
            border: 2px solid transparent;
        }

        .trending-item:hover {
            transform: translateY(-10px);
            border-color: #fe2c55;
            box-shadow: 0 20px 40px rgba(254, 44, 85, 0.3);
        }

        .trending-rank {
            position: absolute;
            top: 15px;
            left: 15px;
            background: linear-gradient(45deg, #fe2c55, #ff6b35);
            color: white;
            width: 40px;
            height: 40px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            font-size: 18px;
            z-index: 2;
        }

        .video-thumbnail {
            position: relative;
            width: 100%;
            height: 250px;
            overflow: hidden;
        }

        .video-thumbnail img,
        .video-thumbnail video {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.3s;
        }

        .trending-item:hover .video-thumbnail img,
        .trending-item:hover .video-thumbnail video {
            transform: scale(1.1);
        }

        .play-overlay {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: rgba(254, 44, 85, 0.9);
            border-radius: 50%;
            width: 70px;
            height: 70px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 28px;
            opacity: 0;
            transition: opacity 0.3s;
        }

        .trending-item:hover .play-overlay {
            opacity: 1;
        }

        .video-duration {
            position: absolute;
            bottom: 10px;
            right: 10px;
            background: rgba(0, 0, 0, 0.8);
            color: white;
            padding: 6px 10px;
            border-radius: 6px;
            font-size: 12px;
            font-weight: 600;
        }

        .trending-info {
            padding: 20px;
        }

        .trending-title {
            font-size: 18px;
            font-weight: 600;
            margin-bottom: 10px;
            line-height: 1.4;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }

        .trending-stats {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
            font-size: 14px;
            color: #888;
        }

        .stat-item {
            display: flex;
            align-items: center;
            gap: 5px;
        }

        .stat-item i {
            color: #fe2c55;
        }

        .trending-creator {
            font-size: 13px;
            color: #ccc;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .creator-avatar {
            width: 24px;
            height: 24px;
            background: #fe2c55;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 12px;
            font-weight: bold;
        }

        .back-btn {
            position: fixed;
            top: 20px;
            left: 20px;
            width: 50px;
            height: 50px;
            background: rgba(255, 255, 255, 0.1);
            border: none;
            border-radius: 50%;
            color: #fff;
            font-size: 20px;
            cursor: pointer;
            backdrop-filter: blur(10px);
            transition: all 0.3s;
            z-index: 100;
        }

        .back-btn:hover {
            background: rgba(255, 255, 255, 0.2);
            transform: scale(1.1);
        }

        .empty-trending {
            text-align: center;
            padding: 100px 20px;
            color: #666;
            grid-column: 1 / -1;
        }

        .empty-trending i {
            font-size: 100px;
            margin-bottom: 30px;
            color: #333;
        }

        .loading-trending {
            text-align: center;
            padding: 80px 20px;
            color: #888;
            grid-column: 1 / -1;
        }

        .spinner {
            width: 50px;
            height: 50px;
            border: 3px solid #333;
            border-top: 3px solid #fe2c55;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin: 0 auto 20px;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* Mobile Responsive Improvements */
        @media (max-width: 768px) {
            .trending-container {
                padding: 100px 15px 20px;
            }

            .trending-header h1 {
                font-size: 36px;
            }

            .trending-subtitle {
                font-size: 16px;
            }

            .trending-grid {
                grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
                gap: 20px;
            }

            .time-filters {
                gap: 10px;
            }

            .time-filter {
                padding: 10px 16px;
                font-size: 14px;
            }

            .video-thumbnail {
                height: 200px;
            }

            .trending-stats {
                flex-wrap: wrap;
                gap: 10px;
            }

            .stat-item {
                font-size: 12px;
            }
        }

        @media (max-width: 480px) {
            .trending-grid {
                grid-template-columns: 1fr;
                gap: 15px;
            }

            .time-filters {
                flex-direction: column;
                align-items: center;
                gap: 8px;
            }

            .time-filter {
                width: 80%;
                text-align: center;
            }

            .video-thumbnail {
                height: 180px;
            }

            .trending-info {
                padding: 15px;
            }

            .trending-title {
                font-size: 16px;
            }
        }
    </style>
</head>
<body>
    <button class="back-btn" id="backBtn">
        <i class="fas fa-arrow-left"></i>
    </button>

    <div class="trending-container">
        <div class="trending-header">
            <h1><i class="fas fa-fire"></i> Trending Videos</h1>
            <p class="trending-subtitle">Discover what's popular right now</p>
            
            <div class="time-filters">
                <button class="time-filter" data-timeframe="1">Today</button>
                <button class="time-filter active" data-timeframe="7">This Week</button>
                <button class="time-filter" data-timeframe="30">This Month</button>
                <button class="time-filter" data-timeframe="365">This Year</button>
            </div>
        </div>

        <div class="trending-grid" id="trendingGrid">
            <div class="loading-trending">
                <div class="spinner"></div>
                <p>Loading trending videos...</p>
            </div>
        </div>
    </div>

    <script>
        let currentTimeframe = '7';
        let isLoading = false;

        document.addEventListener('DOMContentLoaded', function() {
            setupEventListeners();
            loadTrendingVideos(currentTimeframe);
        });

        function setupEventListeners() {
            // Back button - FIXED to use proper navigation
            document.getElementById('backBtn').addEventListener('click', function() {
                if (window.history.length > 1) {
                    window.history.back();
                } else {
                    window.location.href = '/';
                }
            });

            // Time filter buttons
            document.querySelectorAll('.time-filter').forEach(btn => {
                btn.addEventListener('click', function() {
                    const timeframe = this.dataset.timeframe;
                    
                    // Update active state
                    document.querySelectorAll('.time-filter').forEach(b => b.classList.remove('active'));
                    this.classList.add('active');
                    
                    // Load trending videos for selected timeframe
                    loadTrendingVideos(timeframe);
                });
            });
        }

        async function loadTrendingVideos(timeframe) {
            if (isLoading) return;

            isLoading = true;
            currentTimeframe = timeframe;
            
            // Show loading state
            const grid = document.getElementById('trendingGrid');
            grid.innerHTML = `
                <div class="loading-trending">
                    <div class="spinner"></div>
                    <p>Loading trending videos...</p>
                </div>
            `;

            try {
                console.log(`Loading trending videos for timeframe: ${timeframe} days`);
                
                const response = await fetch(`/api/videos/trending?timeFrame=${timeframe}&limit=20`);
                
                if (!response.ok) {
                    throw new Error(`HTTP ${response.status}`);
                }

                const data = await response.json();
                console.log('Trending API response:', data);
                
                if (data.success) {
                    displayTrendingVideos(data.data || []);
                } else {
                    throw new Error(data.message || 'Failed to load trending videos');
                }
            } catch (error) {
                console.error('Load trending error:', error);
                showError('Failed to load trending videos. Loading popular videos instead...');
                
                // Fallback: Try to load popular videos instead
                try {
                    const fallbackResponse = await fetch('/api/videos/feed?limit=20');
                    const fallbackData = await fallbackResponse.json();
                    
                    if (fallbackData.success && fallbackData.data && fallbackData.data.length > 0) {
                        console.log('Using fallback popular videos');
                        displayTrendingVideos(fallbackData.data);
                    } else {
                        showEmptyState();
                    }
                } catch (fallbackError) {
                    console.error('Fallback also failed:', fallbackError);
                    showEmptyState();
                }
            } finally {
                isLoading = false;
            }
        }

        function displayTrendingVideos(videos) {
            const grid = document.getElementById('trendingGrid');
            
            if (!videos || videos.length === 0) {
                showEmptyState();
                return;
            }

            console.log(`Displaying ${videos.length} trending videos`);

            grid.innerHTML = videos.map((video, index) => `
                <div class="trending-item" data-video-id="${video.id}" data-video-slug="${video.slug || video.id}">
                    <div class="trending-rank">${index + 1}</div>
                    <div class="video-thumbnail">
                        ${video.thumbnail ? 
                            `<img src="${video.thumbnail}" alt="${video.title}" loading="lazy">` :
                            `<video src="${video.video_url}" muted preload="metadata"></video>`
                        }
                        <div class="play-overlay">
                            <i class="fas fa-play"></i>
                        </div>
                        ${video.duration ? 
                            `<div class="video-duration">${formatDuration(video.duration)}</div>` :
                            ''
                        }
                    </div>
                    <div class="trending-info">
                        <div class="trending-title">${video.title}</div>
                        <div class="trending-stats">
                            <div class="stat-item">
                                <i class="fas fa-eye"></i>
                                <span>${formatNumber(video.views_count || 0)}</span>
                            </div>
                            <div class="stat-item">
                                <i class="fas fa-heart"></i>
                                <span>${formatNumber(video.likes_count || 0)}</span>
                            </div>
                            <div class="stat-item">
                                <i class="fas fa-share"></i>
                                <span>${formatNumber(video.shares_count || 0)}</span>
                            </div>
                        </div>
                        ${video.username ? 
                            `<div class="trending-creator">
                                <div class="creator-avatar">${video.username.charAt(0).toUpperCase()}</div>
                                @${video.username}
                            </div>` : ''
                        }
                    </div>
                </div>
            `).join('');

            // Add click event listeners
            document.querySelectorAll('.trending-item').forEach(item => {
                item.addEventListener('click', function() {
                    const videoSlug = this.dataset.videoSlug;
                    if (videoSlug) {
                        window.location.href = `/video/${videoSlug}`;
                    }
                });
            });

            // Add hover effects for video previews
            addVideoPreviewEffects();
        }

        function showEmptyState() {
            const grid = document.getElementById('trendingGrid');
            grid.innerHTML = `
                <div class="empty-trending">
                    <i class="fas fa-fire-flame-curved"></i>
                    <h3>No Trending Videos</h3>
                    <p>No trending videos found for this timeframe.<br>Try a different time period or check back later.</p>
                    <button class="time-filter" style="margin-top: 20px;" data-timeframe="365">
                        View All Time Popular
                    </button>
                </div>
            `;
            
            // Add click handler to the button
            const button = grid.querySelector('.time-filter');
            if (button) {
                button.addEventListener('click', function() {
                    document.querySelectorAll('.time-filters .time-filter').forEach(b => b.classList.remove('active'));
                    document.querySelector('.time-filters [data-timeframe="365"]').classList.add('active');
                    loadTrendingVideos('365');
                });
            }
        }

        function addVideoPreviewEffects() {
            document.querySelectorAll('.trending-item').forEach(item => {
                const video = item.querySelector('video');
                if (video) {
                    item.addEventListener('mouseenter', () => {
                        video.play().catch(() => {
                            console.log('Video preview play failed');
                        });
                    });
                    
                    item.addEventListener('mouseleave', () => {
                        video.pause();
                        video.currentTime = 0;
                    });
                }
            });
        }

        function formatNumber(num) {
            if (num >= 1000000) {
                return (num / 1000000).toFixed(1) + 'M';
            } else if (num >= 1000) {
                return (num / 1000).toFixed(1) + 'K';
            }
            return num.toString();
        }

        function formatDuration(seconds) {
            const mins = Math.floor(seconds / 60);
            const secs = seconds % 60;
            return `${mins}:${secs.toString().padStart(2, '0')}`;
        }

        function showError(message) {
            console.warn(message);
            
            // Show a brief error message but continue with fallback
            const toast = document.createElement('div');
            toast.style.cssText = `
                position: fixed;
                bottom: 30px;
                left: 50%;
                transform: translateX(-50%);
                background: rgba(255, 193, 7, 0.9);
                color: #000;
                padding: 12px 20px;
                border-radius: 25px;
                z-index: 1000;
                font-size: 14px;
                box-shadow: 0 4px 15px rgba(0,0,0,0.3);
            `;
            toast.textContent = message;
            document.body.appendChild(toast);
            
            setTimeout(() => {
                toast.remove();
            }, 3000);
        }
    </script>
</body>
</html>
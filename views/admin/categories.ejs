<div style="background: white; padding: 30px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);">
    <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 30px;">
        <h2>Manage Categories</h2>
        <button id="addCategoryBtn" class="btn btn-primary">
            <i class="fas fa-plus"></i>
            Add Category
        </button>
    </div>
    
    <div id="categoriesList">
        <div style="text-align: center; padding: 50px; color: #7f8c8d;">
            <i class="fas fa-tags" style="font-size: 64px; margin-bottom: 20px; color: #bdc3c7;"></i>
            <h3>Loading Categories...</h3>
        </div>
    </div>
</div>

<!-- Add Category Modal -->
<div id="addCategoryModal" style="position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.5); z-index: 2000; display: none; align-items: center; justify-content: center;">
    <div style="background: white; padding: 30px; border-radius: 10px; width: 90%; max-width: 500px;">
        <h3 style="margin-bottom: 20px;">Add New Category</h3>
        <form id="addCategoryForm">
            <div style="margin-bottom: 15px;">
                <label style="display: block; margin-bottom: 5px; font-weight: 600;">Name:</label>
                <input type="text" name="name" required style="width: 100%; padding: 10px; border: 1px solid #ddd; border-radius: 5px;">
            </div>
            <div style="margin-bottom: 20px;">
                <label style="display: block; margin-bottom: 5px; font-weight: 600;">Description:</label>
                <textarea name="description" style="width: 100%; padding: 10px; border: 1px solid #ddd; border-radius: 5px; height: 80px;"></textarea>
            </div>
            <div style="display: flex; gap: 10px; justify-content: flex-end;">
                <button type="button" id="cancelBtn" style="padding: 10px 20px; border: 1px solid #ddd; background: white; border-radius: 5px; cursor: pointer;">Cancel</button>
                <button type="submit" class="btn btn-primary">Add Category</button>
            </div>
        </form>
    </div>
</div>

<script>
// Event listeners
document.addEventListener('DOMContentLoaded', function() {
    // Add category button
    document.getElementById('addCategoryBtn').addEventListener('click', showAddCategoryForm);
    
    // Cancel button
    document.getElementById('cancelBtn').addEventListener('click', hideAddCategoryForm);
    
    // Close modal when clicking outside
    document.getElementById('addCategoryModal').addEventListener('click', function(e) {
        if (e.target === this) {
            hideAddCategoryForm();
        }
    });
    
    // Form submit
    document.getElementById('addCategoryForm').addEventListener('submit', handleAddCategory);
    
    // Load categories on page load
    loadCategories();
});

function showAddCategoryForm() {
    document.getElementById('addCategoryModal').style.display = 'flex';
}

function hideAddCategoryForm() {
    document.getElementById('addCategoryModal').style.display = 'none';
    document.getElementById('addCategoryForm').reset();
}

async function handleAddCategory(e) {
    e.preventDefault();
    
    const formData = new FormData(e.target);
    const data = Object.fromEntries(formData);
    
    console.log('Adding category:', data);
    
    try {
        const response = await fetch('/api/categories', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        });
        
        console.log('Create response status:', response.status);
        
        if (!response.ok) {
            const errorText = await response.text();
            console.error('Create error:', errorText);
            throw new Error(`HTTP ${response.status}`);
        }
        
        const result = await response.json();
        console.log('Create result:', result);
        
        if (result.success) {
            alert('Category added successfully!');
            hideAddCategoryForm();
            loadCategories();
        } else {
            alert('Error: ' + result.message);
        }
    } catch (error) {
        console.error('Add category error:', error);
        alert('Failed to add category: ' + error.message);
    }
}

async function deleteCategory(id) {
    if (!confirm('Are you sure you want to delete this category?')) {
        return;
    }
    
    try {
        const response = await fetch(`/api/categories/${id}`, {
            method: 'DELETE'
        });
        
        const result = await response.json();
        
        if (result.success) {
            alert('Category deleted successfully!');
            loadCategories();
        } else {
            alert('Error: ' + result.message);
        }
    } catch (error) {
        alert('Failed to delete category');
    }
}

async function loadCategories() {
    try {
        console.log('Loading categories from /api/categories...');
        
        const response = await fetch('/api/categories');
        console.log('Response status:', response.status);
        console.log('Response content-type:', response.headers.get('content-type'));
        
        if (!response.ok) {
            const errorText = await response.text();
            console.error('Response error:', errorText.substring(0, 200));
            throw new Error(`HTTP ${response.status}`);
        }
        
        const contentType = response.headers.get('content-type');
        if (!contentType || !contentType.includes('application/json')) {
            const responseText = await response.text();
            console.error('Non-JSON response:', responseText.substring(0, 200));
            throw new Error('Server returned non-JSON response');
        }
        
        const data = await response.json();
        console.log('Categories data:', data);
        
        const categoriesDiv = document.getElementById('categoriesList');
        
        if (data.success && data.data && data.data.length > 0) {
            categoriesDiv.innerHTML = data.data.map(cat => `
                <div style="border: 1px solid #e9ecef; border-radius: 8px; padding: 20px; margin-bottom: 15px; display: flex; justify-content: space-between; align-items: center;">
                    <div>
                        <h4 style="margin-bottom: 5px;">${cat.name}</h4>
                        <p style="color: #7f8c8d; margin: 0;">${cat.description || 'No description'}</p>
                        <small style="color: #999;">ID: ${cat.id} | Slug: ${cat.slug}</small>
                    </div>
                    <div>
                        <button class="btn btn-danger delete-btn" data-id="${cat.id}" style="padding: 5px 10px; font-size: 12px;">
                            <i class="fas fa-trash"></i>
                        </button>
                    </div>
                </div>
            `).join('');
            
            // Add event listeners for delete buttons
            document.querySelectorAll('.delete-btn').forEach(btn => {
                btn.addEventListener('click', function() {
                    deleteCategory(this.dataset.id);
                });
            });
        } else {
            categoriesDiv.innerHTML = `
                <div style="text-align: center; padding: 50px; color: #7f8c8d;">
                    <i class="fas fa-tags" style="font-size: 64px; margin-bottom: 20px; color: #bdc3c7;"></i>
                    <h3>No Categories Yet</h3>
                    <p>Add your first category to organize videos</p>
                </div>
            `;
        }
    } catch (error) {
        console.error('Load categories error:', error);
        document.getElementById('categoriesList').innerHTML = `
            <div style="text-align: center; padding: 50px; color: #e74c3c;">
                <i class="fas fa-exclamation-triangle" style="font-size: 64px; margin-bottom: 20px;"></i>
                <h3>Failed to Load Categories</h3>
                <p>Error: ${error.message}</p>
                <button id="retryBtn" style="margin-top: 10px; padding: 8px 16px; background: #3498db; color: white; border: none; border-radius: 4px; cursor: pointer;">Retry</button>
            </div>
        `;
        
        // Add retry event listener
        document.getElementById('retryBtn')?.addEventListener('click', loadCategories);
    }
}
</script>
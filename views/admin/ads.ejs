<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> - Admin Dashboard</title>
    
    <!-- Font Awesome for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: #333;
        }

        .dashboard-container {
            display: flex;
            min-height: 100vh;
        }

        /* Sidebar */
        .sidebar {
            width: 280px;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-right: 1px solid rgba(255, 255, 255, 0.2);
            padding: 2rem 0;
            position: fixed;
            height: 100vh;
            overflow-y: auto;
            transition: transform 0.3s ease;
            z-index: 1000;
        }

        .sidebar.mobile-hidden {
            transform: translateX(-100%);
        }

        .logo {
            text-align: center;
            margin-bottom: 2rem;
            padding: 0 1.5rem;
        }

        .logo h1 {
            background: linear-gradient(45deg, #ff6b6b, #4ecdc4);
            background-clip: text;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            font-size: 2rem;
            font-weight: bold;
        }

        .nav-menu {
            list-style: none;
            padding: 0 1rem;
        }

        .nav-item {
            margin-bottom: 0.5rem;
        }

        .nav-link {
            display: flex;
            align-items: center;
            padding: 1rem 1.5rem;
            color: #666;
            text-decoration: none;
            border-radius: 12px;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .nav-link:hover,
        .nav-link.active {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            transform: translateX(5px);
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
        }

        .nav-link i {
            margin-right: 1rem;
            font-size: 1.2rem;
            width: 24px;
            text-align: center;
        }

        .nav-link span {
            font-weight: 500;
        }

        /* Main Content */
        .main-content {
            flex: 1;
            margin-left: 280px;
            padding: 2rem;
            transition: margin-left 0.3s ease;
        }

        .main-content.sidebar-collapsed {
            margin-left: 0;
        }

        /* Page Header */
        .page-header {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 20px;
            padding: 2rem;
            margin-bottom: 2rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.1);
            position: relative;
            overflow: hidden;
        }

        .page-header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(90deg, #667eea, #764ba2, #ff6b6b);
        }

        .mobile-toggle {
            display: none;
            background: none;
            border: none;
            font-size: 1.5rem;
            color: #666;
            cursor: pointer;
            margin-right: 1rem;
        }

        .page-title {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .page-title h1 {
            font-size: 2.5rem;
            font-weight: 700;
            background: linear-gradient(45deg, #667eea, #764ba2);
            background-clip: text;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            margin: 0;
        }

        .page-title .title-icon {
            width: 60px;
            height: 60px;
            background: linear-gradient(45deg, #667eea, #764ba2);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1.5rem;
        }

        .page-subtitle {
            color: #666;
            font-size: 1.1rem;
            margin-top: 0.5rem;
        }

        .header-actions {
            display: flex;
            gap: 1rem;
            align-items: center;
            flex-wrap: wrap;
        }

        /* Buttons */
        .btn {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.75rem 1.5rem;
            border: none;
            border-radius: 50px;
            cursor: pointer;
            font-size: 0.9rem;
            font-weight: 600;
            text-decoration: none;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
            transition: left 0.5s;
        }

        .btn:hover::before {
            left: 100%;
        }

        .btn-primary {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
        }

        .btn-primary:hover {
            transform: translateY(-3px);
            box-shadow: 0 15px 35px rgba(102, 126, 234, 0.4);
        }

        .btn-success {
            background: linear-gradient(135deg, #27ae60, #2ecc71);
            color: white;
            box-shadow: 0 8px 25px rgba(39, 174, 96, 0.3);
        }

        .btn-success:hover {
            transform: translateY(-3px);
            box-shadow: 0 15px 35px rgba(39, 174, 96, 0.4);
        }

        .btn-warning {
            background: linear-gradient(135deg, #f39c12, #e67e22);
            color: white;
            box-shadow: 0 8px 25px rgba(243, 156, 18, 0.3);
        }

        .btn-warning:hover {
            transform: translateY(-3px);
            box-shadow: 0 15px 35px rgba(243, 156, 18, 0.4);
        }

        .btn-danger {
            background: linear-gradient(135deg, #e74c3c, #c0392b);
            color: white;
            box-shadow: 0 8px 25px rgba(231, 76, 60, 0.3);
        }

        .btn-danger:hover {
            transform: translateY(-3px);
            box-shadow: 0 15px 35px rgba(231, 76, 60, 0.4);
        }

        .btn-info {
            background: linear-gradient(135deg, #3498db, #2980b9);
            color: white;
            box-shadow: 0 8px 25px rgba(52, 152, 219, 0.3);
        }

        .btn-info:hover {
            transform: translateY(-3px);
            box-shadow: 0 15px 35px rgba(52, 152, 219, 0.4);
        }

        .btn-secondary {
            background: linear-gradient(135deg, #95a5a6, #7f8c8d);
            color: white;
            box-shadow: 0 8px 25px rgba(149, 165, 166, 0.3);
        }

        .btn-secondary:hover {
            transform: translateY(-3px);
            box-shadow: 0 15px 35px rgba(149, 165, 166, 0.4);
        }

        .btn:disabled {
            opacity: 0.6;
            cursor: not-allowed;
            transform: none;
        }

        .btn-xs {
            padding: 0.4rem 0.8rem;
            font-size: 0.75rem;
        }

        .btn-sm {
            padding: 0.5rem 1rem;
            font-size: 0.85rem;
        }

        .btn-lg {
            padding: 1rem 2rem;
            font-size: 1.1rem;
        }

        /* Stats Grid */
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 2rem;
            margin-bottom: 2rem;
        }

        .stat-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 20px;
            padding: 2rem;
            text-align: center;
            position: relative;
            overflow: hidden;
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .stat-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: var(--gradient);
        }

        .stat-card.impressions::before {
            --gradient: linear-gradient(45deg, #3498db, #2980b9);
        }

        .stat-card.clicks::before {
            --gradient: linear-gradient(45deg, #e74c3c, #c0392b);
        }

        .stat-card.ctr::before {
            --gradient: linear-gradient(45deg, #27ae60, #2ecc71);
        }

        .stat-card.active::before {
            --gradient: linear-gradient(45deg, #f39c12, #e67e22);
        }

        .stat-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
        }

        .stat-icon {
            width: 80px;
            height: 80px;
            margin: 0 auto 1.5rem;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 2rem;
            color: white;
            position: relative;
        }

        .stat-icon.impressions {
            background: linear-gradient(45deg, #3498db, #2980b9);
        }

        .stat-icon.clicks {
            background: linear-gradient(45deg, #e74c3c, #c0392b);
        }

        .stat-icon.ctr {
            background: linear-gradient(45deg, #27ae60, #2ecc71);
        }

        .stat-icon.active {
            background: linear-gradient(45deg, #f39c12, #e67e22);
        }

        .stat-number {
            font-size: 2.5rem;
            font-weight: bold;
            color: #333;
            margin-bottom: 0.5rem;
        }

        .stat-label {
            color: #666;
            font-size: 1rem;
            font-weight: 500;
        }

        /* Filters Card */
        .filters-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 20px;
            padding: 2rem;
            margin-bottom: 2rem;
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.1);
        }

        .filters-form {
            display: flex;
            gap: 1.5rem;
            align-items: end;
            flex-wrap: wrap;
        }

        .filter-group {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
            min-width: 160px;
        }

        .filter-group label {
            font-weight: 600;
            color: #2c3e50;
            font-size: 0.9rem;
        }

        .filter-group select {
            padding: 0.75rem 1rem;
            border: 2px solid rgba(0, 0, 0, 0.1);
            border-radius: 12px;
            font-size: 0.9rem;
            background: rgba(255, 255, 255, 0.8);
            color: #495057;
            transition: all 0.3s ease;
            backdrop-filter: blur(10px);
        }

        .filter-group select:focus {
            outline: none;
            border-color: #667eea;
            background: rgba(255, 255, 255, 0.95);
            box-shadow: 0 0 0 4px rgba(102, 126, 234, 0.1);
            transform: translateY(-2px);
        }

        .filter-actions {
            display: flex;
            gap: 1rem;
        }

        /* Slots Overview */
        .slots-overview {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 20px;
            padding: 2rem;
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.1);
            margin-bottom: 2rem;
        }

        .slots-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 2rem;
            flex-wrap: wrap;
            gap: 1rem;
        }

        .slots-header h3 {
            margin: 0;
            color: #2c3e50;
            font-size: 1.5rem;
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }

        .slots-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
            gap: 1.5rem;
        }

        .slot-card {
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(10px);
            border: 2px solid rgba(255, 255, 255, 0.2);
            border-radius: 20px;
            padding: 1.5rem;
            text-align: center;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
            min-height: 300px;
            display: flex;
            flex-direction: column;
        }

        .slot-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 4px;
            background: linear-gradient(90deg, #3498db, #9b59b6, #e74c3c, #27ae60);
            background-size: 300% 100%;
            animation: gradientFlow 3s ease infinite;
        }

        @keyframes gradientFlow {
            0%, 100% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
        }

        .slot-card:hover {
            transform: translateY(-8px);
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
            border-color: rgba(102, 126, 234, 0.3);
        }

        .slot-header {
            margin-bottom: 1.5rem;
        }

        .slot-header h4 {
            margin: 0 0 0.5rem 0;
            color: #2c3e50;
            font-size: 1.25rem;
            font-weight: 600;
        }

        .slot-timing {
            font-size: 0.8rem;
            color: #6c757d;
            font-weight: 500;
        }

        .slot-status {
            flex-grow: 1;
            display: flex;
            flex-direction: column;
            justify-content: center;
            gap: 1rem;
        }

        .status-active {
            color: #27ae60;
            font-weight: 600;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
            font-size: 1rem;
        }

        .status-empty {
            color: #e74c3c;
            font-weight: 600;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
            font-size: 1rem;
        }

        .slot-info {
            background: rgba(255, 255, 255, 0.8);
            backdrop-filter: blur(10px);
            padding: 1rem;
            border-radius: 12px;
            border: 1px solid rgba(0, 0, 0, 0.05);
            margin-bottom: 1rem;
        }

        .slot-info strong {
            display: block;
            font-size: 1rem;
            font-weight: 600;
            margin-bottom: 0.5rem;
            color: #2c3e50;
        }

        .type-badge {
            display: inline-flex;
            align-items: center;
            gap: 0.25rem;
            padding: 0.25rem 0.75rem;
            font-size: 0.75rem;
            font-weight: 600;
            border-radius: 20px;
            text-transform: uppercase;
            margin-bottom: 0.5rem;
        }

        .type-image {
            background: linear-gradient(135deg, #27ae60, #2ecc71);
            color: white;
        }

        .type-video {
            background: linear-gradient(135deg, #3498db, #2980b9);
            color: white;
        }

        .type-google_ads {
            background: linear-gradient(135deg, #f39c12, #e67e22);
            color: white;
        }

        .type-unknown {
            background: linear-gradient(135deg, #95a5a6, #7f8c8d);
            color: white;
        }

        .slot-stats {
            display: flex;
            justify-content: center;
            gap: 1rem;
            margin-top: 0.5rem;
            font-size: 0.8rem;
            color: #6c757d;
        }

        .slot-stats span {
            display: flex;
            align-items: center;
            gap: 0.25rem;
        }

        .slot-actions {
            display: flex;
            justify-content: center;
            gap: 0.5rem;
            margin-top: 1rem;
            flex-wrap: wrap;
        }

        /* Media preview in slot */
        .slot-media-preview {
            width: 80px;
            height: 60px;
            border-radius: 8px;
            overflow: hidden;
            margin: 0.5rem auto;
            border: 2px solid rgba(0, 0, 0, 0.1);
            background: #f8f9fa;
            cursor: pointer;
            transition: transform 0.3s ease;
        }

        .slot-media-preview:hover {
            transform: scale(1.05);
        }

        .slot-media-preview img,
        .slot-media-preview video {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .slot-google-ads-preview {
            width: 80px;
            height: 60px;
            margin: 0.5rem auto;
            background: linear-gradient(135deg, #fff3e0, #ffcc02);
            border: 2px solid #ffcc02;
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #f57c00;
            font-size: 1.25rem;
            cursor: pointer;
            transition: transform 0.3s ease;
        }

        .slot-google-ads-preview:hover {
            transform: scale(1.05);
        }

        /* Empty state */
        .slot-empty-state {
            padding: 1.5rem;
            color: #6c757d;
        }

        .slot-empty-state i {
            font-size: 2.5rem;
            margin-bottom: 1rem;
            color: #ced4da;
        }

        .slot-empty-state p {
            margin: 0 0 1rem 0;
            font-size: 0.9rem;
        }

        /* Debug info */
        .debug-info {
            background: rgba(248, 249, 250, 0.95);
            backdrop-filter: blur(10px);
            padding: 1rem;
            margin-bottom: 1.5rem;
            border-radius: 12px;
            font-size: 0.8rem;
            border: 1px solid rgba(0, 0, 0, 0.1);
        }

        .debug-info details {
            margin-top: 1rem;
        }

        .debug-info summary {
            cursor: pointer;
            color: #666;
            font-weight: 600;
        }

        /* Overlay for mobile */
        .overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.5);
            z-index: 999;
        }

        .overlay.active {
            display: block;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .sidebar {
                transform: translateX(-100%);
            }

            .sidebar.mobile-visible {
                transform: translateX(0);
            }

            .main-content {
                margin-left: 0;
                padding: 1rem;
            }

            .mobile-toggle {
                display: block;
            }

            .page-header {
                padding: 1.5rem;
                flex-direction: column;
                gap: 1rem;
                text-align: center;
            }

            .page-title {
                flex-direction: column;
                gap: 1rem;
            }

            .page-title h1 {
                font-size: 2rem;
            }

            .header-actions {
                justify-content: center;
                flex-wrap: wrap;
            }

            .stats-grid {
                grid-template-columns: repeat(2, 1fr);
                gap: 1rem;
            }

            .filters-form {
                flex-direction: column;
                gap: 1rem;
            }

            .filter-group {
                min-width: auto;
            }

            .filter-actions {
                flex-direction: column;
            }

            .slots-grid {
                grid-template-columns: 1fr;
            }

            .slots-header {
                flex-direction: column;
                align-items: stretch;
                gap: 1rem;
            }

            .slot-actions {
                flex-direction: column;
                gap: 0.5rem;
            }

            .slot-actions .btn {
                width: 100%;
                justify-content: center;
            }
        }

        @media (max-width: 480px) {
            .stats-grid {
                grid-template-columns: 1fr;
            }

            .page-title .title-icon {
                width: 50px;
                height: 50px;
                font-size: 1.2rem;
            }

            .slot-card {
                padding: 1rem;
            }

            .stat-card {
                padding: 1.5rem;
            }

            .stat-icon {
                width: 60px;
                height: 60px;
                font-size: 1.5rem;
            }

            .stat-number {
                font-size: 2rem;
            }
        }
    </style>
</head>

<body>
    <div class="dashboard-container">
        <!-- Sidebar -->
        <nav class="sidebar" id="sidebar">
            <div class="logo">
                <h1><i class="fas fa-video"></i> KlipQ</h1>
            </div>
            
            <ul class="nav-menu">
                <li class="nav-item">
                    <a href="/admin" class="nav-link">
                        <i class="fas fa-home"></i>
                        <span>Dashboard</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/admin/videos" class="nav-link">
                        <i class="fas fa-video"></i>
                        <span>Videos</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/admin/categories" class="nav-link">
                        <i class="fas fa-tags"></i>
                        <span>Categories</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/admin/series" class="nav-link">
                        <i class="fas fa-list"></i>
                        <span>Series</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/admin/users" class="nav-link">
                        <i class="fas fa-users"></i>
                        <span>Users</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/admin/analytics" class="nav-link">
                        <i class="fas fa-chart-line"></i>
                        <span>Analytics</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/admin/ads" class="nav-link active">
                        <i class="fas fa-bullhorn"></i>
                        <span>Advertisements</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/admin/settings" class="nav-link">
                        <i class="fas fa-cog"></i>
                        <span>Settings</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/admin/api-dashboard" class="nav-link">
                        <i class="fas fa-code"></i>
                        <span>API & RSS</span>
                    </a>
                </li>
            </ul>
        </nav>

        <!-- Overlay for mobile -->
        <div class="overlay" id="overlay"></div>

        <!-- Main Content -->
        <main class="main-content" id="mainContent">
            <!-- Page Header -->
            <header class="page-header">
                <div class="page-title">
                    <button class="mobile-toggle" id="mobileToggle">
                        <i class="fas fa-bars"></i>
                    </button>
                    <div class="title-icon">
                        <i class="fas fa-bullhorn"></i>
                    </div>
                    <div>
                        <h1>Manage Advertisements</h1>
                        <p class="page-subtitle">Create and manage ad campaigns for your video platform</p>
                    </div>
                </div>
                <div class="header-actions">
                    <button class="btn btn-info" onclick="refreshData()">
                        <i class="fas fa-sync-alt"></i>
                        Refresh
                    </button>
                    <a href="/admin/ads/create" class="btn btn-success">
                        <i class="fas fa-plus"></i>
                        Create New Ad
                    </a>
                    <button class="btn btn-warning" onclick="showBulkActions()">
                        <i class="fas fa-tasks"></i>
                        Bulk Actions
                    </button>
                </div>
            </header>

            <!-- Quick Stats -->
            <div class="stats-grid">
                <div class="stat-card impressions">
                    <div class="stat-icon impressions">
                        <i class="fas fa-eye"></i>
                    </div>
                    <div class="stat-number" id="totalImpressions">0</div>
                    <div class="stat-label">Total Impressions</div>
                </div>
                <div class="stat-card clicks">
                    <div class="stat-icon clicks">
                        <i class="fas fa-mouse-pointer"></i>
                    </div>
                    <div class="stat-number" id="totalClicks">0</div>
                    <div class="stat-label">Total Clicks</div>
                </div>
                <div class="stat-card ctr">
                    <div class="stat-icon ctr">
                        <i class="fas fa-chart-line"></i>
                    </div>
                    <div class="stat-number" id="averageCTR">0%</div>
                    <div class="stat-label">Average CTR</div>
                </div>
                <div class="stat-card active">
                    <div class="stat-icon active">
                        <i class="fas fa-toggle-on"></i>
                    </div>
                    <div class="stat-number" id="activeAds">0</div>
                    <div class="stat-label">Active Ads</div>
                </div>
            </div>

            <!-- Filters -->
            <div class="filters-card">
                <form method="GET" action="/admin/ads" class="filters-form">
                    <div class="filter-group">
                        <label for="status">Status:</label>
                        <select name="status" id="status">
                            <option value="">All Status</option>
                            <option value="active" <%= (typeof filters !== 'undefined' && filters && filters.status === 'active') ? 'selected' : '' %>>Active</option>
                            <option value="inactive" <%= (typeof filters !== 'undefined' && filters && filters.status === 'inactive') ? 'selected' : '' %>>Inactive</option>
                        </select>
                    </div>
                    
                    <div class="filter-group">
                        <label for="slot">Slot Position:</label>
                        <select name="slot" id="slot">
                            <option value="">All Slots</option>
                            <option value="1" <%= (typeof filters !== 'undefined' && filters && filters.slot == 1) ? 'selected' : '' %>>Slot 1</option>
                            <option value="2" <%= (typeof filters !== 'undefined' && filters && filters.slot == 2) ? 'selected' : '' %>>Slot 2</option>
                            <option value="3" <%= (typeof filters !== 'undefined' && filters && filters.slot == 3) ? 'selected' : '' %>>Slot 3</option>
                            <option value="4" <%= (typeof filters !== 'undefined' && filters && filters.slot == 4) ? 'selected' : '' %>>Slot 4</option>
                            <option value="5" <%= (typeof filters !== 'undefined' && filters && filters.slot == 5) ? 'selected' : '' %>>Slot 5</option>
                        </select>
                    </div>
                    
                    <div class="filter-group">
                        <label for="type">Type:</label>
                        <select name="type" id="type">
                            <option value="">All Types</option>
                            <option value="image" <%= (typeof filters !== 'undefined' && filters && filters.type === 'image') ? 'selected' : '' %>>Image</option>
                            <option value="video" <%= (typeof filters !== 'undefined' && filters && filters.type === 'video') ? 'selected' : '' %>>Video</option>
                            <option value="google_ads" <%= (typeof filters !== 'undefined' && filters && filters.type === 'google_ads') ? 'selected' : '' %>>Google Ads</option>
                        </select>
                    </div>
                    
                    <div class="filter-actions">
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-search"></i>
                            Filter
                        </button>
                        <a href="/admin/ads" class="btn btn-secondary">
                            <i class="fas fa-times"></i>
                            Clear
                        </a>
                    </div>
                </form>
            </div>

            <!-- Ad Slots Overview -->
            <div class="slots-overview">
                <div class="slots-header">
                    <h3>
                        <i class="fas fa-th-large"></i>
                        Ad Slots Overview
                    </h3>
                    <button class="btn btn-sm btn-info" onclick="previewAllSlots()">
                        <i class="fas fa-eye"></i>
                        Preview All
                    </button>
                </div>

                <!-- DEBUG INFO -->
                <% if (process.env.NODE_ENV === 'development') { %>
                    <div class="debug-info">
                        <strong>🔍 Debug Info:</strong><br>
                        ads variable: <%= typeof ads %><br>
                        allActiveAds variable: <%= typeof allActiveAds %> (length: <%= Array.isArray(allActiveAds) ? allActiveAds.length : 'N/A' %>)<br>
                        
                        <% if (typeof ads === 'object' && ads) { %>
                            console.log('✅ Found ads data in template:');
                            <% if (ads.header && ads.header.length > 0) { %>
                                console.log('  Slot 1 (header):', <%= ads.header.length %>, 'ads');
                            <% } %>
                            <% if (ads.before_video && ads.before_video.length > 0) { %>
                                console.log('  Slot 2 (before_video):', <%= ads.before_video.length %>, 'ads');
                            <% } %>
                            <% if (ads.sidebar && ads.sidebar.length > 0) { %>
                                console.log('  Slot 3 (sidebar):', <%= ads.sidebar.length %>, 'ads');
                            <% } %>
                            <% if (ads.after_video && ads.after_video.length > 0) { %>
                                console.log('  Slot 4 (after_video):', <%= ads.after_video.length %>, 'ads');
                            <% } %>
                            <% if (ads.footer && ads.footer.length > 0) { %>
                                console.log('  Slot 5 (footer):', <%= ads.footer.length %>, 'ads');
                            <% } %>
                        <% } else { %>
                            console.log('❌ No ads data found in template');
                        <% } %>
                    </div>
                <% } %>

                <div class="slots-grid">
                    <% 
                        // Create slots data structure using ads data from global middleware
                        const slotsData = {};
                        
                        // Initialize all slots as empty
                        for (let i = 1; i <= 5; i++) {
                            slotsData[i] = null;
                        }
                        
                        // Map slot positions to ads data structure
                        const slotMapping = {
                            1: 'header',        // Slot 1 -> header
                            2: 'before_video',  // Slot 2 -> before_video  
                            3: 'sidebar',       // Slot 3 -> sidebar
                            4: 'after_video',   // Slot 4 -> after_video
                            5: 'footer'         // Slot 5 -> footer
                        };
                        
                        // Use ads data that's already available and populated by middleware
                        if (typeof ads === 'object' && ads) {
                            console.log('Using ads data from global middleware');
                            
                            // Populate slots from ads data
                            for (let slotNum = 1; slotNum <= 5; slotNum++) {
                                const adPosition = slotMapping[slotNum];
                                const slotAds = ads[adPosition] || [];
                                
                                // Get first active ad for this slot
                                const activeAd = slotAds.find(ad => ad && ad.is_active);
                                if (activeAd) {
                                    slotsData[slotNum] = activeAd;
                                    console.log(`Found ad for slot ${slotNum}: ${activeAd.title}`);
                                }
                            }
                        } else {
                            console.log('No ads data available from middleware');
                        }
                        
                        // Generate slot cards
                        for (let slotNum = 1; slotNum <= 5; slotNum++) {
                            const slotAd = slotsData[slotNum];
                    %>
                        <div class="slot-card" data-slot="<%= slotNum %>">
                            <div class="slot-header">
                                <h4>Slot <%= slotNum %></h4>
                                <span class="slot-timing">After every 3 videos</span>
                            </div>
                            
                            <div class="slot-status">
                                <% if (slotAd) { %>
                                    <!-- Active Slot with Ad -->
                                    <div class="status-active">
                                        <i class="fas fa-check-circle"></i>
                                        <span>Active</span>
                                    </div>
                                    
                                    <!-- Debug info for development -->
                                    <% if (process.env.NODE_ENV === 'development') { %>
                                        <div style="font-size: 0.7rem; color: #666; margin: 0.25rem 0;">
                                            ID: <%= slotAd.id %>, Type: <%= slotAd.type %>, Position: <%= slotAd.slot_position %>
                                        </div>
                                    <% } %>
                                    
                                    <!-- Media Preview -->
                                    <% if (slotAd.type === 'google_ads') { %>
                                        <div class="slot-google-ads-preview" onclick="showGoogleAdsPreview('<%= slotAd.id %>', '<%= (slotAd.title || '').replace(/'/g, '&quot;') %>')">
                                            <i class="fas fa-code"></i>
                                        </div>
                                    <% } else if (slotAd.media_url) { %>
                                        <div class="slot-media-preview" onclick="showMediaPreview('<%= slotAd.media_url %>', '<%= slotAd.type %>', '<%= (slotAd.title || '').replace(/'/g, '&quot;') %>')">
                                            <% if (slotAd.type === 'image') { %>
                                                <img src="<%= slotAd.media_url %>" alt="<%= slotAd.title || 'Ad Image' %>" 
                                                    onerror="this.style.display='none'; this.nextElementSibling.style.display='block';" />
                                                <div style="display: none; color: #dc3545; font-size: 0.75rem;">Image load error</div>
                                            <% } else if (slotAd.type === 'video') { %>
                                                <video muted preload="metadata">
                                                    <source src="<%= slotAd.media_url %>" type="video/mp4">
                                                    <div style="color: #dc3545; font-size: 0.75rem;">Video not supported</div>
                                                </video>
                                            <% } %>
                                        </div>
                                    <% } else { %>
                                        <div style="padding: 1.25rem; color: #6c757d; font-size: 0.8rem;">
                                            No media URL available
                                        </div>
                                    <% } %>
                                    
                                    <div class="slot-info">
                                        <strong><%= slotAd.title || 'Untitled Ad' %></strong>
                                        <span class="type-badge type-<%= slotAd.type || 'unknown' %>">
                                            <i class="fas fa-<%= slotAd.type === 'video' ? 'video' : slotAd.type === 'google_ads' ? 'code' : 'image' %>"></i>
                                            <%= slotAd.type || 'unknown' %>
                                            <% if (slotAd.type === 'video' && slotAd.duration) { %>
                                                (<%= slotAd.duration %>s)
                                            <% } %>
                                        </span>
                                        <div class="slot-stats">
                                            <span><i class="fas fa-eye"></i> <%= slotAd.impressions_count || 0 %></span>
                                            <% if (slotAd.type !== 'google_ads') { %>
                                                <span><i class="fas fa-mouse-pointer"></i> <%= slotAd.clicks_count || 0 %></span>
                                            <% } %>
                                        </div>
                                        
                                        <!-- Click URL Display (if not Google Ads) -->
                                        <% if (slotAd.click_url && slotAd.type !== 'google_ads') { %>
                                            <div style="margin-top: 0.5rem; font-size: 0.75rem; color: #6c757d;">
                                                <i class="fas fa-external-link-alt"></i>
                                                <%= slotAd.click_url.length > 30 ? slotAd.click_url.substring(0, 30) + '...' : slotAd.click_url %>
                                            </div>
                                        <% } %>
                                    </div>
                                    
                                    <div class="slot-actions">
                                        <button onclick="editSlotAd(<%= slotAd.id %>)" class="btn btn-xs btn-warning" title="Edit Ad">
                                            <i class="fas fa-edit"></i>
                                            Edit
                                        </button>
                                        <button onclick="previewSlotAd(<%= slotAd.id %>)" class="btn btn-xs btn-info" title="Preview">
                                            <i class="fas fa-eye"></i>
                                            Preview
                                        </button>
                                        <button onclick="toggleSlotAdStatus(<%= slotAd.id %>)" class="btn btn-xs btn-danger" title="Deactivate">
                                            <i class="fas fa-pause"></i>
                                            Disable
                                        </button>
                                        <button onclick="deleteSlotAd(<%= slotAd.id %>, <%= slotNum %>)" class="btn btn-xs btn-danger" title="Delete Ad">
                                            <i class="fas fa-trash"></i>
                                            Delete
                                        </button>
                                    </div>
                                <% } else { %>
                                    <!-- Empty Slot -->
                                    <div class="status-empty">
                                        <i class="fas fa-exclamation-triangle"></i>
                                        <span>Empty</span>
                                    </div>
                                    
                                    <div class="slot-empty-state">
                                        <i class="fas fa-plus-circle"></i>
                                        <p>No active ad in this slot</p>
                                        <a href="/admin/ads/create?slot=<%= slotNum %>" class="btn btn-sm btn-primary">
                                            <i class="fas fa-plus"></i>
                                            Add Ad
                                        </a>
                                        
                                        <!-- Debug info for development -->
                                        <% if (process.env.NODE_ENV === 'development') { %>
                                            <div style="font-size: 0.7rem; color: #666; margin-top: 0.5rem;">
                                                No ads found for slot <%= slotNum %> (<%= slotMapping[slotNum] %>)
                                            </div>
                                        <% } %>
                                    </div>
                                <% } %>
                            </div>
                        </div>
                    <% } %>
                </div>
                
                <!-- Debug Raw Data (Development Only) -->
                <% if (process.env.NODE_ENV === 'development') { %>
                    <details style="margin-top: 1.5rem;">
                        <summary style="cursor: pointer; color: #666;">🔍 Slot Mapping Debug</summary>
                        <div class="debug-info" style="margin-top: 0.75rem;">
                            <strong>Slot to Position Mapping:</strong><br>
                            Slot 1 (header): <%= typeof ads === 'object' && ads && ads.header ? ads.header.length + ' ads' : 'No data' %><br>
                            Slot 2 (before_video): <%= typeof ads === 'object' && ads && ads.before_video ? ads.before_video.length + ' ads' : 'No data' %><br>
                            Slot 3 (sidebar): <%= typeof ads === 'object' && ads && ads.sidebar ? ads.sidebar.length + ' ads' : 'No data' %><br>
                            Slot 4 (after_video): <%= typeof ads === 'object' && ads && ads.after_video ? ads.after_video.length + ' ads' : 'No data' %><br>
                            Slot 5 (footer): <%= typeof ads === 'object' && ads && ads.footer ? ads.footer.length + ' ads' : 'No data' %><br>
                        </div>
                    </details>
                <% } %>
            </div>
        </main>
    </div>

    <script>
        // Global variables
        let selectedAds = [];
        let currentView = 'table';

        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            console.log('🚀 Initializing ads management page...');
            
            // Mobile navigation
            const mobileToggle = document.getElementById('mobileToggle');
            const sidebar = document.getElementById('sidebar');
            const overlay = document.getElementById('overlay');

            function toggleSidebar() {
                sidebar.classList.toggle('mobile-visible');
                overlay.classList.toggle('active');
            }

            mobileToggle.addEventListener('click', toggleSidebar);
            overlay.addEventListener('click', toggleSidebar);

            // Responsive handling
            window.addEventListener('resize', function() {
                if (window.innerWidth > 768) {
                    sidebar.classList.remove('mobile-visible');
                    overlay.classList.remove('active');
                }
            });
            
            loadStats();
            initializeEventListeners();
            
            // Auto-refresh stats every 60 seconds
            setInterval(loadStats, 60000);
            
            console.log('✅ Ads management page initialized');
        });

        // Enhanced slot management functions
        function editSlotAd(adId) {
            if (!adId) {
                showNotification('Invalid ad ID', 'error');
                return;
            }
            console.log('✏️ Editing slot ad:', adId);
            window.location.href = `/admin/ads/${adId}/edit`;
        }

        function previewSlotAd(adId) {
            if (!adId) {
                showNotification('Invalid ad ID', 'error');
                return;
            }
            console.log('👁️ Previewing slot ad:', adId);
            window.open(`/admin/ads/${adId}/preview`, '_blank');
        }

        async function toggleSlotAdStatus(adId) {
            if (!adId) {
                showNotification('Invalid ad ID', 'error');
                return;
            }
            
            // Confirm action
            if (!confirm('Are you sure you want to toggle this ad status?')) {
                return;
            }
            
            try {
                console.log('🔄 Toggling slot ad status:', adId);
                
                showNotification('Updating ad status...', 'info');
                
                const response = await fetch(`/admin/ads/${adId}/toggle`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
                
                const data = await response.json();
                
                if (data.success) {
                    showNotification(data.message, 'success');
                    // Refresh the page to update slot view
                    setTimeout(() => window.location.reload(), 1500);
                } else {
                    showNotification(data.message || 'Failed to toggle status', 'error');
                }
            } catch (error) {
                console.error('Toggle slot ad status error:', error);
                showNotification('Failed to update ad status', 'error');
            }
        }

        async function deleteSlotAd(adId, slotNum) {
            if (!adId) {
                showNotification('Invalid ad ID', 'error');
                return;
            }
            
            if (!confirm(`Are you sure you want to delete this ad from Slot ${slotNum}?\n\nThis action cannot be undone and will permanently remove the ad.`)) {
                return;
            }
            
            try {
                console.log('🗑️ Deleting slot ad:', adId);
                
                showNotification('Deleting advertisement...', 'info');
                
                const response = await fetch(`/admin/ads/${adId}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
                
                const data = await response.json();
                
                if (data.success) {
                    showNotification(`Ad deleted from Slot ${slotNum} successfully`, 'success');
                    
                    // Update the slot to show empty state immediately
                    const slotCard = document.querySelector(`[data-slot="${slotNum}"]`);
                    if (slotCard) {
                        updateSlotToEmpty(slotCard, slotNum);
                    }
                    
                    // Update stats
                    loadStats();
                } else {
                    showNotification(data.message || 'Failed to delete ad', 'error');
                }
            } catch (error) {
                console.error('Delete slot ad error:', error);
                showNotification('Failed to delete advertisement', 'error');
            }
        }

        function updateSlotToEmpty(slotCard, slotNum) {
            const slotStatus = slotCard.querySelector('.slot-status');
            if (slotStatus) {
                slotStatus.innerHTML = `
                    <div class="status-empty">
                        <i class="fas fa-exclamation-triangle"></i>
                        <span>Empty</span>
                    </div>
                    <div class="slot-empty-state">
                        <i class="fas fa-plus-circle"></i>
                        <p>No active ad in this slot</p>
                        <a href="/admin/ads/create?slot=${slotNum}" class="btn btn-sm btn-primary">
                            <i class="fas fa-plus"></i>
                            Add Ad
                        </a>
                    </div>
                `;
            }
        }

        function showMediaPreview(mediaUrl, type, title) {
            if (!mediaUrl) {
                showNotification('No media to preview', 'warning');
                return;
            }
            
            // Create modal dynamically if it doesn't exist
            let modal = document.getElementById('mediaPreviewModal');
            if (!modal) {
                modal = document.createElement('div');
                modal.id = 'mediaPreviewModal';
                modal.className = 'modal';
                modal.innerHTML = `
                    <div class="modal-content">
                        <div class="modal-header">
                            <h3><i class="fas fa-eye"></i> Media Preview</h3>
                            <button class="modal-close" onclick="closeModal('mediaPreviewModal')">
                                <i class="fas fa-times"></i>
                            </button>
                        </div>
                        <div class="modal-body">
                            <div id="mediaPreviewContent" class="media-preview-content">
                                <!-- Media content will be inserted here -->
                            </div>
                        </div>
                    </div>
                `;
                document.body.appendChild(modal);
            }
            
            const content = document.getElementById('mediaPreviewContent');
            if (!content) return;
            
            if (type === 'image') {
                content.innerHTML = `
                    <img src="${mediaUrl}" alt="${title}" style="max-width: 100%; max-height: 400px; border-radius: 8px;">
                    <h4 style="margin-top: 16px; text-align: center;">${title}</h4>
                `;
            } else if (type === 'video') {
                content.innerHTML = `
                    <video controls autoplay muted style="max-width: 100%; max-height: 400px; border-radius: 8px;">
                        <source src="${mediaUrl}" type="video/mp4">
                        Your browser does not support the video tag.
                    </video>
                    <h4 style="margin-top: 16px; text-align: center;">${title}</h4>
                `;
            }
            
            modal.style.display = 'block';
        }

        function showGoogleAdsPreview(adId, title) {
            // Create modal dynamically if it doesn't exist
            let modal = document.getElementById('googleAdsModal');
            if (!modal) {
                modal = document.createElement('div');
                modal.id = 'googleAdsModal';
                modal.className = 'modal';
                modal.innerHTML = `
                    <div class="modal-content">
                        <div class="modal-header">
                            <h3><i class="fab fa-google"></i> Google Ads Preview</h3>
                            <button class="modal-close" onclick="closeModal('googleAdsModal')">
                                <i class="fas fa-times"></i>
                            </button>
                        </div>
                        <div class="modal-body">
                            <div id="googleAdsContent" class="google-ads-content">
                                <!-- Google Ads content will be inserted here -->
                            </div>
                        </div>
                    </div>
                `;
                document.body.appendChild(modal);
            }
            
            const content = document.getElementById('googleAdsContent');
            if (!content) return;
            
            content.innerHTML = `
                <div style="text-align: center; padding: 20px;">
                    <div style="font-size: 64px; color: #f57c00; margin-bottom: 20px;">
                        <i class="fab fa-google"></i>
                    </div>
                    <h4>${title}</h4>
                    <div style="background: linear-gradient(135deg, #fff3e0, #ffcc02); padding: 20px; border-radius: 12px; border: 2px solid #ffcc02; margin-top: 20px;">
                        <h4 style="color: #f57c00; margin-bottom: 12px;">Google Ads Script</h4>
                        <p style="color: #6c757d; margin: 0; line-height: 1.6;">
                            This advertisement contains a Google Ads script that will be automatically rendered when displayed to users. 
                            The actual ads content is managed by Google and will vary based on your targeting settings.
                        </p>
                    </div>
                </div>
            `;
            
            modal.style.display = 'block';
        }

        function closeModal(modalId) {
            const modal = document.getElementById(modalId);
            if (modal) {
                modal.style.display = 'none';
            }
        }

        // Load dashboard stats
        async function loadStats() {
            try {
                const response = await fetch('/api/admin/ads/summary');
                if (response.ok) {
                    const data = await response.json();
                    if (data.success) {
                        updateStatsDisplay(data.data);
                    }
                }
            } catch (error) {
                console.error('Failed to load stats:', error);
            }
        }

        function updateStatsDisplay(stats) {
            try {
                const elements = {
                    totalImpressions: document.getElementById('totalImpressions'),
                    totalClicks: document.getElementById('totalClicks'),
                    averageCTR: document.getElementById('averageCTR'),
                    activeAds: document.getElementById('activeAds')
                };

                if (elements.totalImpressions) {
                    elements.totalImpressions.textContent = (stats.total_impressions || 0).toLocaleString();
                }
                if (elements.totalClicks) {
                    elements.totalClicks.textContent = (stats.total_clicks || 0).toLocaleString();
                }
                if (elements.averageCTR) {
                    elements.averageCTR.textContent = (stats.overall_ctr || 0) + '%';
                }
                if (elements.activeAds) {
                    elements.activeAds.textContent = stats.active_ads || 0;
                }
            } catch (error) {
                console.error('Failed to update stats display:', error);
            }
        }

        function initializeEventListeners() {
            // Video hover effects for slot previews
            document.querySelectorAll('.slot-media-preview video').forEach(video => {
                video.addEventListener('mouseenter', function() {
                    this.play().catch(console.warn);
                });
                
                video.addEventListener('mouseleave', function() {
                    this.pause();
                    this.currentTime = 0;
                });
            });
        }

        function refreshData() {
            showNotification('Refreshing data...', 'info');
            setTimeout(() => {
                window.location.reload();
            }, 1000);
        }

        function showBulkActions() {
            showNotification('Bulk actions feature coming soon', 'info');
        }

        function previewAllSlots() {
            showNotification('Opening slots preview...', 'info');
            // You can implement a preview page for all slots here
            console.log('Preview all slots functionality');
        }

        window.addEventListener('click', function(event) {
            if (event.target.classList.contains('modal')) {
                event.target.style.display = 'none';
            }
        });

        // Modal styles
        const modalStyles = document.createElement('style');
        modalStyles.textContent = `
            .modal {
                display: none;
                position: fixed;
                z-index: 2000;
                left: 0;
                top: 0;
                width: 100%;
                height: 100%;
                background-color: rgba(0,0,0,0.8);
                backdrop-filter: blur(8px);
            }

            .modal-content {
                background: rgba(255, 255, 255, 0.98);
                backdrop-filter: blur(20px);
                margin: 5% auto;
                padding: 0;
                border-radius: 20px;
                width: 90%;
                max-width: 600px;
                max-height: 80vh;
                overflow: hidden;
                box-shadow: 0 25px 50px rgba(0,0,0,0.3);
                animation: modalSlideIn 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);
            }

            @keyframes modalSlideIn {
                from {
                    opacity: 0;
                    transform: translateY(-50px) scale(0.9);
                }
                to {
                    opacity: 1;
                    transform: translateY(0) scale(1);
                }
            }

            .modal-header {
                padding: 1.5rem 2rem 1rem;
                background: rgba(248, 249, 250, 0.8);
                backdrop-filter: blur(10px);
                border-bottom: 2px solid rgba(0, 0, 0, 0.05);
                display: flex;
                justify-content: space-between;
                align-items: center;
                position: relative;
            }

            .modal-header::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                height: 4px;
                background: linear-gradient(90deg, #667eea, #764ba2);
                border-radius: 20px 20px 0 0;
            }

            .modal-header h3 {
                margin: 0;
                color: #2c3e50;
                font-size: 1.25rem;
                font-weight: 600;
                display: flex;
                align-items: center;
                gap: 0.75rem;
            }

            .modal-close {
                background: none;
                border: none;
                font-size: 1.25rem;
                cursor: pointer;
                color: #6c757d;
                padding: 0.5rem;
                border-radius: 50%;
                transition: all 0.3s ease;
            }

            .modal-close:hover {
                background: rgba(0, 0, 0, 0.1);
                color: #495057;
                transform: scale(1.1);
            }

            .modal-body {
                padding: 2rem;
                max-height: 60vh;
                overflow-y: auto;
            }

            .media-preview-content {
                text-align: center;
            }

            .google-ads-content {
                text-align: center;
            }

            @media (max-width: 768px) {
                .modal-content {
                    width: 95%;
                    margin: 2.5% auto;
                }

                .modal-body {
                    padding: 1.5rem;
                }
            }
        `;
        document.head.appendChild(modalStyles);

        // Show notification
        function showNotification(message, type = 'info') {
            // Remove existing notifications
            document.querySelectorAll('.notification').forEach(n => n.remove());
            
            const icons = {
                success: 'check-circle',
                error: 'times-circle',
                warning: 'exclamation-triangle',
                info: 'info-circle'
            };
            
            const notification = document.createElement('div');
            notification.className = `notification notification-${type}`;
            notification.innerHTML = `
                <i class="fas fa-${icons[type] || 'info-circle'}"></i>
                <span>${message}</span>
            `;
            
            // Add notification styles
            notification.style.cssText = `
                position: fixed;
                top: 2rem;
                right: 2rem;
                padding: 1rem 1.5rem;
                border-radius: 15px;
                color: white;
                z-index: 10000;
                display: flex;
                align-items: center;
                gap: 0.75rem;
                font-weight: 600;
                box-shadow: 0 8px 30px rgba(0,0,0,0.3);
                animation: slideInRight 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);
                backdrop-filter: blur(10px);
                max-width: 400px;
                min-width: 300px;
            `;
            
            // Set background color based on type
            const colors = {
                success: 'linear-gradient(135deg, #27ae60, #2ecc71)',
                error: 'linear-gradient(135deg, #e74c3c, #c0392b)',
                warning: 'linear-gradient(135deg, #f39c12, #e67e22)',
                info: 'linear-gradient(135deg, #3498db, #2980b9)'
            };
            
            notification.style.background = colors[type] || colors.info;
            
            document.body.appendChild(notification);
            
            // Auto-remove after 5 seconds
            setTimeout(() => {
                if (notification.parentNode) {
                    notification.style.animation = 'slideOutRight 0.3s ease';
                    setTimeout(() => notification.remove(), 300);
                }
            }, 5000);
        }

        // Add CSS animations
        const style = document.createElement('style');
        style.textContent = `
            @keyframes slideInRight {
                from {
                    transform: translateX(100%);
                    opacity: 0;
                }
                to {
                    transform: translateX(0);
                    opacity: 1;
                }
            }
            
            @keyframes slideOutRight {
                from {
                    transform: translateX(0);
                    opacity: 1;
                }
                to {
                    transform: translateX(100%);
                    opacity: 0;
                }
            }

            /* Additional responsive styles */
            @media (max-width: 768px) {
                .notification {
                    left: 1rem !important;
                    right: 1rem !important;
                    top: 1rem !important;
                    max-width: none !important;
                    min-width: auto !important;
                }
            }

            /* Loading states */
            .loading {
                display: inline-block;
                width: 20px;
                height: 20px;
                border: 3px solid rgba(255, 255, 255, 0.3);
                border-top: 3px solid #ffffff;
                border-radius: 50%;
                animation: spin 1s linear infinite;
            }

            @keyframes spin {
                0% { transform: rotate(0deg); }
                100% { transform: rotate(360deg); }
            }

            /* Hover effects for stat cards */
            .stat-card {
                cursor: pointer;
            }

            .stat-card:hover .stat-icon {
                transform: scale(1.1);
            }

            .stat-card:hover .stat-number {
                transform: scale(1.05);
            }

            /* Enhanced slot card animations */
            .slot-card {
                animation: fadeInUp 0.6s ease forwards;
            }

            .slot-card:nth-child(1) { animation-delay: 0.1s; }
            .slot-card:nth-child(2) { animation-delay: 0.2s; }
            .slot-card:nth-child(3) { animation-delay: 0.3s; }
            .slot-card:nth-child(4) { animation-delay: 0.4s; }
            .slot-card:nth-child(5) { animation-delay: 0.5s; }

            @keyframes fadeInUp {
                from {
                    opacity: 0;
                    transform: translateY(30px);
                }
                to {
                    opacity: 1;
                    transform: translateY(0);
                }
            }

            /* Enhanced button hover effects */
            .btn {
                position: relative;
                overflow: hidden;
            }

            .btn:active {
                transform: translateY(-1px) scale(0.98);
            }

            /* Improved focus states */
            .btn:focus,
            .filter-group select:focus {
                outline: 2px solid rgba(102, 126, 234, 0.5);
                outline-offset: 2px;
            }

            /* Better visual feedback for interactive elements */
            .slot-media-preview,
            .slot-google-ads-preview {
                transition: all 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
            }

            .slot-media-preview:active,
            .slot-google-ads-preview:active {
                transform: scale(0.95);
            }

            /* Improved debug info styling */
            .debug-info {
                font-family: 'Courier New', monospace;
                line-height: 1.4;
            }

            .debug-info details[open] summary {
                margin-bottom: 0.75rem;
            }

            /* Enhanced empty state */
            .slot-empty-state {
                transition: all 0.3s ease;
            }

            .slot-card:hover .slot-empty-state {
                transform: translateY(-2px);
            }

            .slot-empty-state i {
                animation: pulse 2s ease-in-out infinite;
            }

            @keyframes pulse {
                0%, 100% {
                    opacity: 0.7;
                    transform: scale(1);
                }
                50% {
                    opacity: 1;
                    transform: scale(1.05);
                }
            }
        `;
        document.head.appendChild(style);

        // Enhanced initialization with smooth loading
        document.addEventListener('DOMContentLoaded', function() {
            // Add initial opacity to elements for fade-in effect
            const elementsToAnimate = document.querySelectorAll('.stat-card, .slot-card');
            elementsToAnimate.forEach((el, index) => {
                el.style.opacity = '0';
                el.style.transform = 'translateY(30px)';
                
                setTimeout(() => {
                    el.style.transition = 'all 0.6s cubic-bezier(0.34, 1.56, 0.64, 1)';
                    el.style.opacity = '1';
                    el.style.transform = 'translateY(0)';
                }, index * 100);
            });
        });

        // Add smooth scroll behavior
        document.documentElement.style.scrollBehavior = 'smooth';

        // Enhanced error handling for media loading
        document.addEventListener('error', function(e) {
            if (e.target.tagName === 'IMG' || e.target.tagName === 'VIDEO') {
                console.warn('Media loading error:', e.target.src);
                e.target.style.display = 'none';
                
                // Show fallback
                const fallback = e.target.nextElementSibling;
                if (fallback) {
                    fallback.style.display = 'block';
                }
            }
        }, true);

        // Performance optimization: Lazy load video previews
        const videoObserver = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    const video = entry.target;
                    if (video.dataset.src) {
                        video.src = video.dataset.src;
                        video.removeAttribute('data-src');
                        videoObserver.unobserve(video);
                    }
                }
            });
        });

        document.querySelectorAll('.slot-media-preview video[data-src]').forEach(video => {
            videoObserver.observe(video);
        });
    </script>
</body>
</html>
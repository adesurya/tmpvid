<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Analytics Dashboard - Video Platform</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: #333;
        }

        .dashboard-container {
            display: flex;
            min-height: 100vh;
        }

        /* Sidebar */
        .sidebar {
            width: 280px;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-right: 1px solid rgba(255, 255, 255, 0.2);
            padding: 2rem 0;
            position: fixed;
            height: 100vh;
            overflow-y: auto;
            transition: transform 0.3s ease;
            z-index: 1000;
        }

        .sidebar.mobile-hidden {
            transform: translateX(-100%);
        }

        .logo {
            text-align: center;
            margin-bottom: 2rem;
            padding: 0 1.5rem;
        }

        .logo h1 {
            background: linear-gradient(45deg, #ff6b6b, #4ecdc4);
            background-clip: text;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            font-size: 2rem;
            font-weight: bold;
        }

        .nav-menu {
            list-style: none;
            padding: 0 1rem;
        }

        .nav-item {
            margin-bottom: 0.5rem;
        }

        .nav-link {
            display: flex;
            align-items: center;
            padding: 1rem 1.5rem;
            color: #666;
            text-decoration: none;
            border-radius: 12px;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .nav-link:hover,
        .nav-link.active {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            transform: translateX(5px);
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
        }

        .nav-link i {
            margin-right: 1rem;
            font-size: 1.2rem;
            width: 24px;
            text-align: center;
        }

        .nav-link span {
            font-weight: 500;
        }

        /* Main Content */
        .main-content {
            flex: 1;
            margin-left: 280px;
            padding: 2rem;
            transition: margin-left 0.3s ease;
        }

        .main-content.sidebar-collapsed {
            margin-left: 0;
        }

        .analytics-container {
            max-width: none;
            padding: 0;
        }

        /* Analytics Header */
        .analytics-header {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 20px;
            padding: 2rem;
            margin-bottom: 2rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.1);
            position: relative;
            overflow: hidden;
            flex-wrap: wrap;
            gap: 1rem;
        }

        .analytics-header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(90deg, #667eea, #764ba2, #ff6b6b, #4ecdc4);
            background-size: 300% 100%;
            animation: gradientFlow 3s ease infinite;
        }

        @keyframes gradientFlow {
            0%, 100% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
        }

        .mobile-toggle {
            display: none;
            background: none;
            border: none;
            font-size: 1.5rem;
            color: #666;
            cursor: pointer;
            margin-right: 1rem;
        }

        .header-title {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .header-title h1 {
            font-size: 2.5rem;
            font-weight: 700;
            background: linear-gradient(45deg, #667eea, #764ba2);
            background-clip: text;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            margin: 0;
        }

        .header-title .title-icon {
            width: 60px;
            height: 60px;
            background: linear-gradient(45deg, #667eea, #764ba2);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1.5rem;
        }

        .time-selector {
            display: flex;
            gap: 0.75rem;
            align-items: center;
            flex-wrap: wrap;
        }

        .time-selector span {
            color: #666;
            font-weight: 600;
            margin-right: 0.5rem;
        }

        .time-btn {
            padding: 0.5rem 1rem;
            border: 2px solid rgba(102, 126, 234, 0.3);
            background: rgba(255, 255, 255, 0.8);
            backdrop-filter: blur(10px);
            border-radius: 25px;
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 0.9rem;
            font-weight: 500;
            color: #667eea;
        }

        .time-btn:hover,
        .time-btn.active {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            border-color: transparent;
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
        }

        /* Summary Cards */
        .summary-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .summary-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 20px;
            padding: 2rem;
            position: relative;
            overflow: hidden;
            transition: all 0.3s ease;
            cursor: pointer;
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.1);
        }

        .summary-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: var(--accent-color);
        }

        .summary-card:hover {
            transform: translateY(-8px);
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
        }

        .summary-card.views {
            --accent-color: linear-gradient(45deg, #3498db, #2980b9);
        }

        .summary-card.likes {
            --accent-color: linear-gradient(45deg, #e74c3c, #c0392b);
        }

        .summary-card.shares {
            --accent-color: linear-gradient(45deg, #27ae60, #2ecc71);
        }

        .summary-card.engagement {
            --accent-color: linear-gradient(45deg, #f39c12, #e67e22);
        }

        .card-icon {
            float: right;
            width: 70px;
            height: 70px;
            background: var(--accent-color);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1.5rem;
            opacity: 0.9;
            transition: transform 0.3s ease;
        }

        .summary-card:hover .card-icon {
            transform: scale(1.1);
        }

        .card-content h3 {
            font-size: 2.5rem;
            font-weight: bold;
            color: #2c3e50;
            margin-bottom: 0.5rem;
        }

        .card-content p {
            color: #7f8c8d;
            font-size: 1rem;
            margin-bottom: 1rem;
            font-weight: 500;
        }

        .card-trend {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            font-size: 0.9rem;
            font-weight: 600;
        }

        .trend-up {
            color: #27ae60;
        }

        .trend-down {
            color: #e74c3c;
        }

        /* Real-time Section */
        .realtime-section {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 20px;
            padding: 2rem;
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.1);
            margin-bottom: 2rem;
            position: relative;
            overflow: hidden;
        }

        .realtime-section::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(90deg, #27ae60, #2ecc71);
        }

        .realtime-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1.5rem;
            flex-wrap: wrap;
            gap: 1rem;
        }

        .realtime-header h3 {
            color: #2c3e50;
            font-size: 1.5rem;
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }

        .live-indicator {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            color: #27ae60;
            font-size: 0.9rem;
            font-weight: 600;
            background: rgba(39, 174, 96, 0.1);
            padding: 0.5rem 1rem;
            border-radius: 25px;
            border: 2px solid rgba(39, 174, 96, 0.2);
        }

        .live-dot {
            width: 8px;
            height: 8px;
            background: #27ae60;
            border-radius: 50%;
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0% { opacity: 1; }
            50% { opacity: 0.5; }
            100% { opacity: 1; }
        }

        .realtime-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
            gap: 1.5rem;
            margin-bottom: 1.5rem;
        }

        .realtime-item {
            text-align: center;
            padding: 1.5rem;
            background: rgba(255, 255, 255, 0.8);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            border: 2px solid rgba(255, 255, 255, 0.2);
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .realtime-item::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 3px;
            background: linear-gradient(90deg, #667eea, #764ba2);
        }

        .realtime-item:hover {
            transform: translateY(-5px);
            border-color: rgba(102, 126, 234, 0.3);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.1);
        }

        .realtime-icon {
            font-size: 2rem;
            margin-bottom: 1rem;
            color: #667eea;
        }

        .realtime-value {
            font-size: 2rem;
            font-weight: bold;
            color: #2c3e50;
            margin-bottom: 0.5rem;
        }

        .realtime-label {
            color: #7f8c8d;
            font-weight: 600;
            margin-bottom: 0.25rem;
        }

        .realtime-sublabel {
            color: #95a5a6;
            font-size: 0.75rem;
            margin-top: 0.25rem;
        }

        .realtime-info {
            margin-top: 1rem;
            padding-top: 1rem;
            border-top: 1px solid rgba(0, 0, 0, 0.1);
            text-align: center;
            color: #7f8c8d;
            font-size: 0.85rem;
        }

        .offline-indicator {
            color: #e74c3c !important;
            background: rgba(231, 76, 60, 0.1) !important;
            border-color: rgba(231, 76, 60, 0.2) !important;
        }

        .offline-dot {
            background: #e74c3c !important;
        }

        /* Charts Section */
        .charts-grid {
            display: grid;
            grid-template-columns: 2fr 1fr;
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .chart-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 20px;
            padding: 2rem;
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.1);
            position: relative;
            overflow: hidden;
        }

        .chart-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(90deg, #667eea, #764ba2);
        }

        .chart-card h3 {
            color: #2c3e50;
            margin-bottom: 1.5rem;
            font-size: 1.25rem;
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }

        .chart-container {
            position: relative;
            height: 300px;
        }

        .chart-container canvas {
            max-height: 300px;
        }

        /* Detailed Tables */
        .detailed-section {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .table-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 20px;
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            position: relative;
        }

        .table-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(90deg, #667eea, #764ba2);
        }

        .table-header {
            background: rgba(248, 249, 250, 0.8);
            backdrop-filter: blur(10px);
            padding: 1.5rem 2rem;
            border-bottom: 1px solid rgba(0, 0, 0, 0.05);
        }

        .table-header h3 {
            color: #2c3e50;
            margin: 0;
            font-size: 1.1rem;
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }

        .table-content {
            max-height: 400px;
            overflow-y: auto;
        }

        .table-row {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1rem 2rem;
            border-bottom: 1px solid rgba(0, 0, 0, 0.05);
            transition: all 0.3s ease;
        }

        .table-row:hover {
            background: rgba(102, 126, 234, 0.05);
            transform: translateX(5px);
        }

        .table-row:last-child {
            border-bottom: none;
        }

        .row-content {
            flex: 1;
        }

        .row-title {
            font-weight: 600;
            color: #2c3e50;
            margin-bottom: 0.25rem;
            font-size: 0.9rem;
        }

        .row-subtitle {
            color: #7f8c8d;
            font-size: 0.8rem;
        }

        .row-value {
            font-weight: bold;
            color: #2c3e50;
            font-size: 1rem;
        }

        /* Loading States */
        .loading {
            display: flex;
            align-items: center;
            justify-content: center;
            height: 300px;
            color: #7f8c8d;
            flex-direction: column;
            gap: 1rem;
        }

        .spinner {
            width: 40px;
            height: 40px;
            border: 3px solid rgba(102, 126, 234, 0.3);
            border-top: 3px solid #667eea;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* Overlay for mobile */
        .overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.5);
            z-index: 999;
        }

        .overlay.active {
            display: block;
        }

        /* Responsive Design */
        @media (max-width: 1200px) {
            .charts-grid {
                grid-template-columns: 1fr;
            }
            
            .detailed-section {
                grid-template-columns: 1fr;
            }
        }

        @media (max-width: 768px) {
            .sidebar {
                transform: translateX(-100%);
            }

            .sidebar.mobile-visible {
                transform: translateX(0);
            }

            .main-content {
                margin-left: 0;
                padding: 1rem;
            }

            .mobile-toggle {
                display: block;
            }

            .analytics-header {
                flex-direction: column;
                gap: 1.5rem;
                text-align: center;
                padding: 1.5rem;
            }

            .header-title {
                flex-direction: column;
                gap: 1rem;
            }

            .header-title h1 {
                font-size: 2rem;
            }
            
            .summary-grid {
                grid-template-columns: 1fr;
            }
            
            .time-selector {
                flex-wrap: wrap;
                justify-content: center;
            }
            
            .realtime-grid {
                grid-template-columns: repeat(2, 1fr);
            }

            .realtime-header {
                flex-direction: column;
                text-align: center;
            }

            .chart-card,
            .table-card,
            .realtime-section {
                padding: 1.5rem;
            }
        }

        @media (max-width: 480px) {
            .realtime-grid {
                grid-template-columns: 1fr;
            }

            .header-title .title-icon {
                width: 50px;
                height: 50px;
                font-size: 1.2rem;
            }

            .card-icon {
                width: 60px;
                height: 60px;
                font-size: 1.25rem;
            }

            .card-content h3 {
                font-size: 2rem;
            }
        }

        /* Enhanced animations */
        .summary-card,
        .chart-card,
        .table-card,
        .realtime-section {
            animation: fadeInUp 0.6s ease forwards;
        }

        .summary-card:nth-child(1) { animation-delay: 0.1s; }
        .summary-card:nth-child(2) { animation-delay: 0.2s; }
        .summary-card:nth-child(3) { animation-delay: 0.3s; }
        .summary-card:nth-child(4) { animation-delay: 0.4s; }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Custom scrollbar */
        .table-content::-webkit-scrollbar {
            width: 6px;
        }

        .table-content::-webkit-scrollbar-track {
            background: rgba(0, 0, 0, 0.05);
            border-radius: 3px;
        }

        .table-content::-webkit-scrollbar-thumb {
            background: linear-gradient(135deg, #667eea, #764ba2);
            border-radius: 3px;
        }

        .table-content::-webkit-scrollbar-thumb:hover {
            background: linear-gradient(135deg, #5d6fd8, #6a42a0);
        }
    </style>
</head>
<body>
    <div class="dashboard-container">
        <!-- Sidebar -->
        <nav class="sidebar" id="sidebar">
            <div class="logo">
                <h1><i class="fas fa-video"></i> KlipQ</h1>
            </div>
            
            <ul class="nav-menu">
                <li class="nav-item">
                    <a href="/admin" class="nav-link">
                        <i class="fas fa-home"></i>
                        <span>Dashboard</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/admin/videos" class="nav-link">
                        <i class="fas fa-video"></i>
                        <span>Videos</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/admin/categories" class="nav-link">
                        <i class="fas fa-tags"></i>
                        <span>Categories</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/admin/series" class="nav-link">
                        <i class="fas fa-list"></i>
                        <span>Series</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/admin/users" class="nav-link">
                        <i class="fas fa-users"></i>
                        <span>Users</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/admin/analytics" class="nav-link active">
                        <i class="fas fa-chart-line"></i>
                        <span>Analytics</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/admin/ads" class="nav-link">
                        <i class="fas fa-bullhorn"></i>
                        <span>Advertisements</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/admin/settings" class="nav-link">
                        <i class="fas fa-cog"></i>
                        <span>Settings</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/admin/api-dashboard" class="nav-link">
                        <i class="fas fa-code"></i>
                        <span>API & RSS</span>
                    </a>
                </li>
            </ul>
        </nav>

        <!-- Overlay for mobile -->
        <div class="overlay" id="overlay"></div>

        <!-- Main Content -->
        <main class="main-content" id="mainContent">
            <div class="analytics-container">
                <!-- Header -->
                <div class="analytics-header">
                    <div class="header-title">
                        <button class="mobile-toggle" id="mobileToggle">
                            <i class="fas fa-bars"></i>
                        </button>
                        <div class="title-icon">
                            <i class="fas fa-chart-line"></i>
                        </div>
                        <h1>Video Analytics</h1>
                    </div>
                    <div class="time-selector">
                        <span>Time Period:</span>
                        <button class="time-btn" data-period="24h">24 Hours</button>
                        <button class="time-btn active" data-period="7d">7 Days</button>
                        <button class="time-btn" data-period="30d">30 Days</button>
                        <button class="time-btn" data-period="90d">90 Days</button>
                    </div>
                </div>

                <!-- Summary Cards -->
                <div class="summary-grid">
                    <div class="summary-card views">
                        <div class="card-icon">
                            <i class="fas fa-eye"></i>
                        </div>
                        <div class="card-content">
                            <h3 id="totalViews">0</h3>
                            <p>Total Views</p>
                            <div class="card-trend trend-up">
                                <i class="fas fa-arrow-up"></i>
                                <span id="viewsTrend">+12.5%</span>
                            </div>
                        </div>
                    </div>

                    <div class="summary-card likes">
                        <div class="card-icon">
                            <i class="fas fa-heart"></i>
                        </div>
                        <div class="card-content">
                            <h3 id="totalLikes">0</h3>
                            <p>Total Likes</p>
                            <div class="card-trend trend-up">
                                <i class="fas fa-arrow-up"></i>
                                <span id="likesTrend">+8.3%</span>
                            </div>
                        </div>
                    </div>

                    <div class="summary-card shares">
                        <div class="card-icon">
                            <i class="fas fa-share"></i>
                        </div>
                        <div class="card-content">
                            <h3 id="totalShares">0</h3>
                            <p>Total Shares</p>
                            <div class="card-trend trend-up">
                                <i class="fas fa-arrow-up"></i>
                                <span id="sharesTrend">+15.7%</span>
                            </div>
                        </div>
                    </div>

                    <div class="summary-card engagement">
                        <div class="card-icon">
                            <i class="fas fa-chart-pie"></i>
                        </div>
                        <div class="card-content">
                            <h3 id="engagementRate">0%</h3>
                            <p>Engagement Rate</p>
                            <div class="card-trend trend-up">
                                <i class="fas fa-arrow-up"></i>
                                <span id="engagementTrend">+5.2%</span>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Real-time Activity -->
                <div class="realtime-section">
                    <div class="realtime-header">
                        <h3><i class="fas fa-broadcast-tower"></i> Real-time Activity</h3>
                        <div class="live-indicator" id="liveIndicator">
                            <div class="live-dot"></div>
                            <span id="liveStatus">Live</span>
                        </div>
                    </div>
                    <div class="realtime-grid">
                        <div class="realtime-item">
                            <div class="realtime-icon">
                                <i class="fas fa-heart"></i>
                            </div>
                            <div class="realtime-value" id="recentLikes">0</div>
                            <div class="realtime-label">Recent Likes</div>
                            <div class="realtime-sublabel" id="recentLikesStatus">Last 5 minutes</div>
                        </div>
                        <div class="realtime-item">
                            <div class="realtime-icon">
                                <i class="fas fa-share"></i>
                            </div>
                            <div class="realtime-value" id="recentShares">0</div>
                            <div class="realtime-label">Recent Shares</div>
                            <div class="realtime-sublabel" id="recentSharesStatus">Last 5 minutes</div>
                        </div>
                    </div>
                    <div class="realtime-info" id="realtimeInfo">
                        <small id="lastUpdated">Last updated: Never</small>
                        <small id="dataSource" style="margin-left: 20px;">Data source: Real database</small>
                    </div>
                </div>

                <!-- Charts Section -->
                <div class="charts-grid">
                    <div class="chart-card">
                        <h3><i class="fas fa-chart-line"></i> Views Over Time</h3>
                        <div class="chart-container">
                            <canvas id="viewsChart"></canvas>
                        </div>
                    </div>

                    <div class="chart-card">
                        <h3><i class="fas fa-chart-pie"></i> Engagement Breakdown</h3>
                        <div class="chart-container">
                            <canvas id="engagementChart"></canvas>
                        </div>
                    </div>
                </div>

                <!-- Detailed Tables -->
                <div class="detailed-section">
                    <!-- Top Videos by Views -->
                    <div class="table-card">
                        <div class="table-header">
                            <h3><i class="fas fa-trophy"></i> Top Videos by Views</h3>
                        </div>
                        <div class="table-content" id="topVideosByViews">
                            <div class="loading">
                                <div class="spinner"></div>
                                <span>Loading...</span>
                            </div>
                        </div>
                    </div>

                    <!-- Top Videos by Engagement -->
                    <div class="table-card">
                        <div class="table-header">
                            <h3><i class="fas fa-fire"></i> Top Videos by Engagement</h3>
                        </div>
                        <div class="table-content" id="topVideosByEngagement">
                            <div class="loading">
                                <div class="spinner"></div>
                                <span>Loading...</span>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Share Platform Analytics -->
                <div class="charts-grid">
                    <div class="chart-card">
                        <h3><i class="fas fa-share-alt"></i> Share Platform Distribution</h3>
                        <div class="chart-container">
                            <canvas id="sharePlatformChart"></canvas>
                        </div>
                    </div>

                    <div class="chart-card">
                        <h3><i class="fas fa-clock"></i> Activity Timeline</h3>
                        <div class="chart-container">
                            <canvas id="activityTimelineChart"></canvas>
                        </div>
                    </div>
                </div>
            </div>
        </main>
    </div>

    <script>
        // Global variables for charts
        let viewsChart, engagementChart, sharePlatformChart, activityTimelineChart;
        let currentPeriod = '7d';

        // Initialize the dashboard
        document.addEventListener('DOMContentLoaded', function() {
            console.log('🚀 Initializing analytics dashboard...');
            
            // Mobile navigation
            const mobileToggle = document.getElementById('mobileToggle');
            const sidebar = document.getElementById('sidebar');
            const overlay = document.getElementById('overlay');

            function toggleSidebar() {
                sidebar.classList.toggle('mobile-visible');
                overlay.classList.toggle('active');
            }

            mobileToggle.addEventListener('click', toggleSidebar);
            overlay.addEventListener('click', toggleSidebar);

            // Responsive handling
            window.addEventListener('resize', function() {
                if (window.innerWidth > 768) {
                    sidebar.classList.remove('mobile-visible');
                    overlay.classList.remove('active');
                }
            });

            setupEventListeners();
            initializeCharts();
            loadAnalyticsData();
            startRealTimeUpdates();
            
            console.log('✅ Analytics dashboard initialized');
        });

        function setupEventListeners() {
            // Time period selector
            document.querySelectorAll('.time-btn').forEach(btn => {
                btn.addEventListener('click', function() {
                    document.querySelectorAll('.time-btn').forEach(b => b.classList.remove('active'));
                    this.classList.add('active');
                    currentPeriod = this.dataset.period;
                    loadAnalyticsData();
                });
            });
        }

        function initializeCharts() {
            // Views Over Time Chart
            const viewsCtx = document.getElementById('viewsChart').getContext('2d');
            viewsChart = new Chart(viewsCtx, {
                type: 'line',
                data: {
                    labels: [],
                    datasets: [{
                        label: 'Views',
                        data: [],
                        borderColor: '#667eea',
                        backgroundColor: 'rgba(102, 126, 234, 0.1)',
                        borderWidth: 3,
                        fill: true,
                        tension: 0.4,
                        pointBackgroundColor: '#667eea',
                        pointBorderColor: '#fff',
                        pointBorderWidth: 2,
                        pointRadius: 5
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            grid: {
                                color: 'rgba(0,0,0,0.1)'
                            }
                        },
                        x: {
                            grid: {
                                color: 'rgba(0,0,0,0.1)'
                            }
                        }
                    }
                }
            });

            // Engagement Breakdown Chart
            const engagementCtx = document.getElementById('engagementChart').getContext('2d');
            engagementChart = new Chart(engagementCtx, {
                type: 'doughnut',
                data: {
                    labels: ['Views', 'Likes', 'Shares'],
                    datasets: [{
                        data: [0, 0, 0],
                        backgroundColor: ['#667eea', '#e74c3c', '#27ae60'],
                        borderWidth: 0,
                        hoverOffset: 10
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'bottom',
                            labels: {
                                padding: 20,
                                usePointStyle: true
                            }
                        }
                    }
                }
            });

            // Share Platform Chart
            const sharePlatformCtx = document.getElementById('sharePlatformChart').getContext('2d');
            sharePlatformChart = new Chart(sharePlatformCtx, {
                type: 'bar',
                data: {
                    labels: ['WhatsApp', 'Twitter', 'Facebook', 'Telegram', 'LinkedIn', 'Copy Link'],
                    datasets: [{
                        label: 'Shares',
                        data: [0, 0, 0, 0, 0, 0],
                        backgroundColor: ['#25d366', '#1da1f2', '#3b5998', '#0088cc', '#0077b5', '#6c757d'],
                        borderRadius: 5,
                        borderSkipped: false
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });

            // Activity Timeline Chart
            const activityCtx = document.getElementById('activityTimelineChart').getContext('2d');
            activityTimelineChart = new Chart(activityCtx, {
                type: 'line',
                data: {
                    labels: [],
                    datasets: [
                        {
                            label: 'Likes',
                            data: [],
                            borderColor: '#e74c3c',
                            backgroundColor: 'rgba(231, 76, 60, 0.1)',
                            borderWidth: 2,
                            fill: false,
                            tension: 0.4
                        },
                        {
                            label: 'Shares',
                            data: [],
                            borderColor: '#27ae60',
                            backgroundColor: 'rgba(39, 174, 96, 0.1)',
                            borderWidth: 2,
                            fill: false,
                            tension: 0.4
                        }
                    ]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'top'
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        }

        async function loadAnalyticsData() {
            try {
                // Show loading state
                showLoading();

                // Simulate API call to your backend
                const response = await fetch(`/api/admin/analytics/detailed?timeframe=${currentPeriod}`);
                
                if (!response.ok) {
                    throw new Error(`HTTP ${response.status}`);
                }

                const data = await response.json();

                if (data.success) {
                    updateDashboard(data.data);
                } else {
                    throw new Error(data.message || 'Failed to load analytics');
                }
            } catch (error) {
                console.error('Analytics error:', error);
                // Load demo data on error
                loadDemoData();
            }
        }

        function loadDemoData() {
            // Demo data for demonstration
            const demoData = {
                totalStats: {
                    total_views: 125847,
                    total_likes: 8432,
                    total_shares: 2156,
                    total_videos: 67
                },
                viewsOverTime: generateTimeSeriesData('views'),
                sharesByPlatform: [
                    { platform: 'whatsapp', share_count: 856 },
                    { platform: 'twitter', share_count: 423 },
                    { platform: 'facebook', share_count: 312 },
                    { platform: 'telegram', share_count: 198 },
                    { platform: 'linkedin', share_count: 145 },
                    { platform: 'copy', share_count: 222 }
                ],
                topVideos: [
                    { title: 'Amazing Nature Documentary', views_count: 15420, likes_count: 892, shares_count: 156, engagement_score: 8.5 },
                    { title: 'Cooking Masterclass', views_count: 12840, likes_count: 756, shares_count: 134, engagement_score: 7.8 },
                    { title: 'Tech Review Latest Phone', views_count: 11230, likes_count: 623, shares_count: 89, engagement_score: 7.2 },
                    { title: 'Travel Vlog Tokyo', views_count: 9856, likes_count: 445, shares_count: 67, engagement_score: 6.9 },
                    { title: 'Fitness Challenge', views_count: 8945, likes_count: 398, shares_count: 78, engagement_score: 6.5 }
                ]
            };

            updateDashboard(demoData);
        }

        function generateTimeSeriesData(type) {
            const data = [];
            const days = currentPeriod === '24h' ? 24 : currentPeriod === '7d' ? 7 : currentPeriod === '30d' ? 30 : 90;
            const isHours = currentPeriod === '24h';
            
            for (let i = days - 1; i >= 0; i--) {
                const date = new Date();
                if (isHours) {
                    date.setHours(date.getHours() - i);
                } else {
                    date.setDate(date.getDate() - i);
                }
                
                let value;
                switch (type) {
                    case 'views':
                        value = Math.floor(Math.random() * 2000) + 500;
                        break;
                    case 'likes':
                        value = Math.floor(Math.random() * 200) + 50;
                        break;
                    case 'shares':
                        value = Math.floor(Math.random() * 50) + 10;
                        break;
                    default:
                        value = Math.floor(Math.random() * 1000);
                }
                
                data.push({
                    date: date.toISOString(),
                    [type]: value,
                    total_views: value,
                    unique_users: Math.floor(value * 0.7),
                    avg_duration: Math.floor(Math.random() * 120) + 30
                });
            }
            
            return data;
        }

        function updateDashboard(data) {
            // Update summary cards
            updateSummaryCards(data.totalStats);
            
            // Update charts
            updateViewsChart(data.viewsOverTime);
            updateEngagementChart(data.totalStats);
            updateSharePlatformChart(data.sharesByPlatform);
            updateActivityTimeline();
            
            // Update tables
            updateTopVideosTables(data.topVideos);
            
            hideLoading();
        }

        function updateSummaryCards(stats) {
            document.getElementById('totalViews').textContent = formatNumber(stats.total_views || 0);
            document.getElementById('totalLikes').textContent = formatNumber(stats.total_likes || 0);
            document.getElementById('totalShares').textContent = formatNumber(stats.total_shares || 0);
            
            // Calculate engagement rate
            const totalViews = stats.total_views || 0;
            const totalEngagements = (stats.total_likes || 0) + (stats.total_shares || 0);
            const engagementRate = totalViews > 0 ? ((totalEngagements / totalViews) * 100).toFixed(1) : 0;
            document.getElementById('engagementRate').textContent = engagementRate + '%';
        }

        function updateViewsChart(viewsData) {
            if (!viewsData || viewsData.length === 0) return;

            const labels = viewsData.map(item => {
                const date = new Date(item.date);
                return currentPeriod === '24h' 
                    ? date.toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit' })
                    : date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });
            });

            const data = viewsData.map(item => item.total_views || item.views || 0);

            viewsChart.data.labels = labels;
            viewsChart.data.datasets[0].data = data;
            viewsChart.update('active');
        }

        function updateEngagementChart(stats) {
            const data = [
                stats.total_views || 0,
                stats.total_likes || 0,
                stats.total_shares || 0
            ];

            engagementChart.data.datasets[0].data = data;
            engagementChart.update('active');
        }

        function updateSharePlatformChart(sharesData) {
            if (!sharesData || sharesData.length === 0) return;

            const labels = sharesData.map(item => 
                item.platform.charAt(0).toUpperCase() + item.platform.slice(1)
            );
            const data = sharesData.map(item => item.share_count);

            sharePlatformChart.data.labels = labels;
            sharePlatformChart.data.datasets[0].data = data;
            sharePlatformChart.update('active');
        }

        function updateActivityTimeline() {
            const likesData = generateTimeSeriesData('likes');
            const sharesData = generateTimeSeriesData('shares');

            const labels = likesData.map(item => {
                const date = new Date(item.date);
                return currentPeriod === '24h' 
                    ? date.toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit' })
                    : date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });
            });

            activityTimelineChart.data.labels = labels;
            activityTimelineChart.data.datasets[0].data = likesData.map(item => item.likes);
            activityTimelineChart.data.datasets[1].data = sharesData.map(item => item.shares);
            activityTimelineChart.update('active');
        }

        function updateTopVideosTables(topVideos) {
            if (!topVideos || topVideos.length === 0) return;

            // Top Videos by Views
            const viewsTableContent = topVideos
                .sort((a, b) => b.views_count - a.views_count)
                .slice(0, 5)
                .map((video, index) => `
                    <div class="table-row">
                        <div class="row-content">
                            <div class="row-title">${video.title}</div>
                            <div class="row-subtitle">Rank #${index + 1}</div>
                        </div>
                        <div class="row-value">${formatNumber(video.views_count)}</div>
                    </div>
                `).join('');

            document.getElementById('topVideosByViews').innerHTML = viewsTableContent;

            // Top Videos by Engagement
            const engagementTableContent = topVideos
                .sort((a, b) => b.engagement_score - a.engagement_score)
                .slice(0, 5)
                .map((video, index) => `
                    <div class="table-row">
                        <div class="row-content">
                            <div class="row-title">${video.title}</div>
                            <div class="row-subtitle">Score: ${video.engagement_score}/10</div>
                        </div>
                        <div class="row-value">${formatNumber(video.likes_count + video.shares_count)}</div>
                    </div>
                `).join('');

            document.getElementById('topVideosByEngagement').innerHTML = engagementTableContent;
        }

        function startRealTimeUpdates() {
            // Update real-time stats every 10 seconds
            setInterval(() => {
                updateRealTimeStats();
            }, 10000);
            
            // Initial update
            updateRealTimeStats();
        }

        async function updateRealTimeStats() {
            try {
                console.log('🔄 Updating real-time stats...');
                
                // Get REAL real-time data from API
                const response = await fetch('/api/admin/analytics/realtime');
                
                if (!response.ok) {
                    throw new Error(`HTTP ${response.status}`);
                }
                
                const data = await response.json();
                
                if (data.success && data.data) {
                    const stats = data.data;
                    
                    // Update live indicator
                    const liveIndicator = document.getElementById('liveIndicator');
                    const liveStatus = document.getElementById('liveStatus');
                    
                    if (stats.activeUsers > 0 || stats.currentViews > 0) {
                        liveIndicator.classList.remove('offline-indicator');
                        liveStatus.textContent = 'Live';
                        liveIndicator.querySelector('.live-dot').classList.remove('offline-dot');
                    } else {
                        liveIndicator.classList.add('offline-indicator');
                        liveStatus.textContent = 'No Activity';
                        liveIndicator.querySelector('.live-dot').classList.add('offline-dot');
                    }
                    
                    // Animate real values
                    animateValue('activeUsers', 
                        parseInt(document.getElementById('activeUsers').textContent) || 0, 
                        stats.activeUsers || 0, 1000);
                    
                    animateValue('currentViews', 
                        parseInt(document.getElementById('currentViews').textContent) || 0, 
                        stats.currentViews || 0, 1000);
                    
                    animateValue('recentLikes', 
                        parseInt(document.getElementById('recentLikes').textContent) || 0, 
                        stats.recentLikes || 0, 1000);
                    
                    animateValue('recentShares', 
                        parseInt(document.getElementById('recentShares').textContent) || 0, 
                        stats.recentShares || 0, 1000);
                    
                    // Update timestamps and status
                    const lastUpdated = document.getElementById('lastUpdated');
                    const dataSource = document.getElementById('dataSource');
                    
                    if (lastUpdated) {
                        lastUpdated.textContent = `Last updated: ${new Date().toLocaleTimeString()}`;
                    }
                    
                    if (dataSource) {
                        const sourceText = data.dataSource === 'real_database' ? 'Real database' : 'No activity detected';
                        dataSource.textContent = `Data source: ${sourceText}`;
                    }
                    
                    console.log('✅ Real-time stats updated:', stats);
                } else {
                    throw new Error(data.message || 'Invalid response format');
                }
                
            } catch (error) {
                console.error('❌ Failed to fetch real-time stats:', error);
                
                // Show zero values when no real data available
                document.getElementById('activeUsers').textContent = '0';
                document.getElementById('currentViews').textContent = '0';
                document.getElementById('recentLikes').textContent = '0';
                document.getElementById('recentShares').textContent = '0';
            }
        }

        function animateValue(id, start, end, duration) {
            const element = document.getElementById(id);
            if (!element) return;

            const range = end - start;
            const increment = range / (duration / 16);
            let current = start;

            const timer = setInterval(() => {
                current += increment;
                if ((increment > 0 && current >= end) || (increment < 0 && current <= end)) {
                    current = end;
                    clearInterval(timer);
                }
                element.textContent = Math.floor(current);
            }, 16);
        }

        function formatNumber(num) {
            if (num >= 1000000) {
                return (num / 1000000).toFixed(1) + 'M';
            } else if (num >= 1000) {
                return (num / 1000).toFixed(1) + 'K';
            }
            return num.toString();
        }

        function showLoading() {
            // Show loading state for charts
            const chartCards = document.querySelectorAll('.chart-card');
            chartCards.forEach(card => {
                const container = card.querySelector('.chart-container');
                if (container) {
                    container.innerHTML = `
                        <div class="loading">
                            <div class="spinner"></div>
                            <span>Loading chart data...</span>
                        </div>
                    `;
                }
            });
        }

        function hideLoading() {
            // Loading will be hidden when charts are updated
        }

        // Export function for integration
        window.refreshAnalytics = loadAnalyticsData;

        // Auto-refresh every 30 seconds
        setInterval(() => {
            loadAnalyticsData();
        }, 30000);

        // Add smooth scrolling
        document.documentElement.style.scrollBehavior = 'smooth';

        // Add initial loading animation
        window.addEventListener('load', function() {
            const elements = document.querySelectorAll('.summary-card, .chart-card, .table-card, .realtime-section');
            elements.forEach((el, index) => {
                el.style.opacity = '0';
                el.style.transform = 'translateY(30px)';
                
                setTimeout(() => {
                    el.style.transition = 'all 0.6s cubic-bezier(0.34, 1.56, 0.64, 1)';
                    el.style.opacity = '1';
                    el.style.transform = 'translateY(0)';
                }, index * 100);
            });
        });
    </script>
</body>
</html>=
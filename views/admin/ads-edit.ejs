<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Advertisement - Admin Dashboard</title>
    
    <!-- Include your existing admin CSS -->
    <link rel="stylesheet" href="/css/admin.css">
    <!-- Font Awesome for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    
    <style>
        * {
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f8f9fa;
            margin: 0;
            padding: 0;
        }

        .container-fluid {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }

        /* Header */
        .page-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 30px;
            padding-bottom: 20px;
            border-bottom: 2px solid #e9ecef;
        }

        .page-header h1 {
            margin: 0;
            color: #2c3e50;
            font-size: 28px;
            font-weight: 700;
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .breadcrumb {
            display: flex;
            align-items: center;
            gap: 8px;
            color: #6c757d;
            font-size: 14px;
        }

        .breadcrumb a {
            color: #007bff;
            text-decoration: none;
        }

        .breadcrumb a:hover {
            text-decoration: underline;
        }

        /* Current media preview */
        .current-media {
            background: #f8f9fa;
            border: 1px solid #e9ecef;
            border-radius: 8px;
            padding: 16px;
            margin-bottom: 16px;
        }

        .current-media h5 {
            margin: 0 0 12px 0;
            color: #495057;
            font-size: 14px;
            font-weight: 600;
        }

        .current-media img,
        .current-media video {
            max-width: 200px;
            max-height: 150px;
            border-radius: 6px;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        }

        .current-media-info {
            margin-top: 12px;
            font-size: 13px;
            color: #6c757d;
        }

        .google-ads-current {
            background: #fff3e0;
            border-color: #ffcc02;
            color: #f57c00;
            text-align: center;
            padding: 20px;
        }

        .google-ads-current i {
            font-size: 32px;
            margin-bottom: 8px;
            display: block;
        }

        /* Form styles */
        .form-card {
            background: white;
            border-radius: 12px;
            box-shadow: 0 2px 12px rgba(0,0,0,0.08);
            overflow: hidden;
            border: 1px solid #e9ecef;
        }

        .form-header {
            background: #f8f9fa;
            padding: 20px 24px;
            border-bottom: 1px solid #e9ecef;
        }

        .form-header h3 {
            margin: 0;
            color: #2c3e50;
            font-size: 18px;
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .form-body {
            padding: 24px;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-group label {
            display: block;
            margin-bottom: 6px;
            font-weight: 600;
            color: #2c3e50;
            font-size: 14px;
        }

        .form-group .required {
            color: #dc3545;
        }

        .form-control {
            width: 100%;
            padding: 12px 16px;
            border: 1px solid #ced4da;
            border-radius: 6px;
            font-size: 14px;
            transition: border-color 0.2s ease, box-shadow 0.2s ease;
            background: white;
        }

        .form-control:focus {
            outline: none;
            border-color: #007bff;
            box-shadow: 0 0 0 2px rgba(0,123,255,0.25);
        }

        textarea.form-control {
            resize: vertical;
            min-height: 80px;
        }

        .form-help {
            font-size: 12px;
            color: #6c757d;
            margin-top: 4px;
        }

        /* File upload section */
        .file-upload-section {
            border: 1px solid #e9ecef;
            border-radius: 8px;
            padding: 16px;
            background: #f8f9fa;
        }

        .file-upload-area {
            border: 2px dashed #ced4da;
            border-radius: 8px;
            padding: 30px;
            text-align: center;
            background: white;
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .file-upload-area:hover {
            border-color: #007bff;
            background: #e3f2fd;
        }

        .file-upload-area.dragover {
            border-color: #007bff;
            background: #e3f2fd;
        }

        .file-upload-icon {
            font-size: 32px;
            color: #ced4da;
            margin-bottom: 12px;
        }

        .file-upload-text {
            color: #6c757d;
            margin-bottom: 6px;
            font-size: 14px;
        }

        .file-upload-hint {
            font-size: 12px;
            color: #6c757d;
        }

        .file-preview {
            margin-top: 16px;
            display: none;
        }

        /* Google Ads section */
        .google-ads-section {
            background: #fff3e0;
            border: 1px solid #ffcc02;
            border-radius: 8px;
            padding: 20px;
            margin-top: 16px;
        }

        .google-ads-header {
            display: flex;
            align-items: center;
            gap: 12px;
            margin-bottom: 16px;
            color: #f57c00;
            font-weight: 600;
        }

        .script-textarea {
            font-family: 'Courier New', monospace;
            font-size: 13px;
            line-height: 1.4;
            background: white;
            border: 1px solid #ffcc02;
            min-height: 120px;
        }

        .script-validation {
            margin-top: 12px;
            padding: 12px;
            border-radius: 6px;
            font-size: 13px;
            display: none;
        }

        .script-validation.valid {
            background: #d4edda;
            border: 1px solid #c3e6cb;
            color: #155724;
        }

        .script-validation.invalid {
            background: #f8d7da;
            border: 1px solid #f5c6cb;
            color: #721c24;
        }

        /* Form check */
        .form-check {
            display: flex;
            align-items: center;
            gap: 8px;
            margin-bottom: 12px;
        }

        .form-check input {
            margin: 0;
        }

        .form-check label {
            margin: 0;
            font-weight: 500;
        }

        /* Buttons */
        .btn {
            padding: 12px 24px;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 8px;
            font-size: 14px;
            font-weight: 500;
            transition: all 0.2s ease;
            text-align: center;
        }

        .btn:hover {
            transform: translateY(-1px);
            box-shadow: 0 2px 8px rgba(0,0,0,0.15);
        }

        .btn-primary { background: #007bff; color: white; }
        .btn-primary:hover { background: #0056b3; }

        .btn-secondary { background: #6c757d; color: white; }
        .btn-secondary:hover { background: #545b62; }

        .btn-warning { background: #ffc107; color: #212529; }
        .btn-warning:hover { background: #d39e00; }

        .btn-danger { background: #dc3545; color: white; }
        .btn-danger:hover { background: #bd2130; }

        .btn-lg {
            padding: 16px 32px;
            font-size: 16px;
        }

        .form-actions {
            display: flex;
            gap: 12px;
            justify-content: flex-end;
            margin-top: 32px;
            padding-top: 24px;
            border-top: 1px solid #e9ecef;
        }

        /* Notifications */
        .notification {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 16px 20px;
            border-radius: 8px;
            color: white;
            z-index: 10000;
            display: flex;
            align-items: center;
            gap: 12px;
            font-weight: 500;
            box-shadow: 0 4px 20px rgba(0,0,0,0.15);
            animation: slideInRight 0.3s ease;
            max-width: 400px;
        }

        @keyframes slideInRight {
            from {
                transform: translateX(100%);
                opacity: 0;
            }
            to {
                transform: translateX(0);
                opacity: 1;
            }
        }

        @keyframes slideOutRight {
            from {
                transform: translateX(0);
                opacity: 1;
            }
            to {
                transform: translateX(100%);
                opacity: 0;
            }
        }

        .notification-success { background: #28a745; }
        .notification-error { background: #dc3545; }
        .notification-warning { background: #ffc107; color: #212529; }
        .notification-info { background: #17a2b8; }

        /* Debug Panel */
        .debug-panel {
            position: fixed;
            top: 10px;
            left: 10px;
            background: #000;
            color: #fff;
            padding: 10px;
            border-radius: 5px;
            z-index: 10001;
            font-size: 12px;
            display: none;
        }

        .debug-panel.show {
            display: block;
        }

        .debug-panel button {
            margin: 2px;
            padding: 4px 8px;
            font-size: 11px;
            border: none;
            border-radius: 3px;
            cursor: pointer;
        }

        /* Responsive */
        @media (max-width: 768px) {
            .container-fluid {
                padding: 16px;
            }

            .page-header {
                flex-direction: column;
                align-items: flex-start;
                gap: 12px;
            }

            .form-actions {
                justify-content: stretch;
                flex-wrap: wrap;
            }

            .form-actions .btn {
                flex: 1;
                justify-content: center;
                min-width: 120px;
            }
        }
    </style>
</head>

<body>
    <div class="container-fluid">
        <!-- Page Header -->
        <div class="page-header">
            <div>
                <h1>
                    <i class="fas fa-edit"></i>
                    Edit Advertisement
                </h1>
                <div class="breadcrumb">
                    <a href="/admin">Dashboard</a>
                    <i class="fas fa-chevron-right"></i>
                    <a href="/admin/ads">Advertisements</a>
                    <i class="fas fa-chevron-right"></i>
                    <span>Edit: Sample Ad Title</span>
                </div>
            </div>
        </div>

        <!-- Edit Form -->
        <form id="editAdForm" enctype="multipart/form-data" action="/admin/ads/1" method="POST">
            <input type="hidden" name="_method" value="PUT">
            
            <div class="form-card">
                <div class="form-header">
                    <h3>
                        <i class="fas fa-cog"></i>
                        Advertisement Details
                    </h3>
                </div>
                <div class="form-body">
                    <!-- Basic Information -->
                    <div class="form-group">
                        <label for="title">
                            Advertisement Title <span class="required">*</span>
                        </label>
                        <input type="text" 
                               id="title" 
                               name="title" 
                               class="form-control" 
                               value="Sample Advertisement"
                               placeholder="Enter a descriptive title for your ad"
                               required>
                        <div class="form-help">This title is for internal reference only</div>
                    </div>

                    <div class="form-group">
                        <label for="description">Description</label>
                        <textarea id="description" 
                                  name="description" 
                                  class="form-control" 
                                  placeholder="Optional description or notes about this advertisement">Sample ad description</textarea>
                    </div>

                    <!-- Ad Type (read-only, show current) -->
                    <div class="form-group">
                        <label>Advertisement Type</label>
                        <div class="form-control" style="background: #f8f9fa; color: #6c757d;" id="adTypeDisplay">
                            <i class="fas fa-image"></i>
                            Image
                            <small style="float: right; font-style: italic;">Type cannot be changed</small>
                        </div>
                        <input type="hidden" name="type" value="image" id="adType">
                    </div>

                    <!-- Current Media Display for Image/Video -->
                    <div class="form-group" id="currentMediaSection">
                        <label>Current Media</label>
                        <div class="current-media">
                            <h5>Current image:</h5>
                            <img src="https://via.placeholder.com/300x200/007bff/white?text=Sample+Ad" alt="Sample Ad" style="display: block;">
                            <div class="current-media-info">
                                <strong>File:</strong> /uploads/sample-ad.jpg<br>
                                <strong>Uploaded:</strong> January 15, 2025
                            </div>
                        </div>
                    </div>

                    <!-- Current Google Ads Display -->
                    <div class="form-group" id="currentGoogleAdsSection" style="display: none;">
                        <label>Current Google Ads</label>
                        <div class="current-media google-ads-current">
                            <i class="fab fa-google"></i>
                            <strong>Google Ads Script Active</strong>
                            <div style="margin-top: 8px; font-size: 14px;">
                                Script length: 850 characters
                            </div>
                        </div>
                    </div>

                    <!-- Replace Media Section -->
                    <div class="form-group" id="replaceMediaSection">
                        <label for="media_file">Replace Media File (optional)</label>
                        <div class="file-upload-section">
                            <div class="file-upload-area">
                                <div class="file-upload-icon">
                                    <i class="fas fa-cloud-upload-alt"></i>
                                </div>
                                <div class="file-upload-text">
                                    Click to select new file or drag and drop
                                </div>
                                <div class="file-upload-hint">
                                    Leave empty to keep current file. Images: JPG, PNG, GIF (max 10MB)
                                </div>
                            </div>
                            <input type="file" 
                                   id="media_file" 
                                   name="media_file" 
                                   style="display: none;" 
                                   accept="image/*">
                            <div class="file-preview" id="filePreview"></div>
                        </div>
                    </div>

                    <!-- Google Ads Script Section -->
                    <div class="google-ads-section" id="googleAdsSection" style="display: none;">
                        <div class="google-ads-header">
                            <i class="fab fa-google"></i>
                            <span>Google Ads Script</span>
                        </div>
                        <div class="form-group">
                            <label for="google_ads_script">
                                Update Google Ads script <span class="required">*</span>
                            </label>
                            <textarea id="google_ads_script" 
                                      name="google_ads_script" 
                                      class="form-control script-textarea"
                                      placeholder="<script async src=&quot;https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;></script>"></textarea>
                            <div class="script-validation" id="scriptValidation"></div>
                            <button type="button" class="btn btn-secondary" id="validateScriptBtn">
                                <i class="fas fa-check"></i>
                                Validate Script
                            </button>
                        </div>
                    </div>

                    <!-- Click URL (for image/video ads) -->
                    <div class="form-group" id="clickUrlSection">
                        <label for="click_url">
                            Click URL <span class="required">*</span>
                        </label>
                        <input type="url" 
                               id="click_url" 
                               name="click_url" 
                               class="form-control" 
                               value="https://example.com"
                               placeholder="https://example.com/landing-page"
                               required>
                        <div class="form-help">Where users will go when they click the ad</div>
                        
                        <div class="form-check">
                            <input type="checkbox" id="open_new_tab" name="open_new_tab" checked>
                            <label for="open_new_tab">Open in new tab</label>
                        </div>
                    </div>

                    <!-- Slot Position -->
                    <div class="form-group">
                        <label for="slot_position">
                            Ad Slot Position <span class="required">*</span>
                        </label>
                        <select id="slot_position" name="slot_position" class="form-control" required>
                            <option value="">Select slot position</option>
                            <option value="1" selected>Slot 1 - Header</option>
                            <option value="2">Slot 2 - Before Video</option>
                            <option value="3">Slot 3 - Sidebar</option>
                            <option value="4">Slot 4 - After Video</option>
                            <option value="5">Slot 5 - Footer</option>
                        </select>
                        <div class="form-help">Ads will be shown after every 3 videos in the feed</div>
                    </div>

                    <!-- Video Duration (for video ads) -->
                    <div class="form-group" id="durationSection" style="display: none;">
                        <label for="duration">Video Duration (seconds)</label>
                        <input type="number" 
                               id="duration" 
                               name="duration" 
                               class="form-control" 
                               value="0"
                               min="0" 
                               max="60" 
                               placeholder="30">
                        <div class="form-help">How long the video ad should play (0 = full length)</div>
                    </div>

                    <!-- Status and Dates -->
                    <div class="form-group">
                        <label>Advertisement Status</label>
                        <div class="form-check">
                            <input type="checkbox" id="is_active" name="is_active" checked>
                            <label for="is_active">Advertisement is active</label>
                        </div>
                        <div class="form-help">Inactive ads will not be shown to users</div>
                    </div>

                    <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px;">
                        <div class="form-group">
                            <label for="start_date">Start Date</label>
                            <input type="datetime-local" 
                                   id="start_date" 
                                   name="start_date" 
                                   class="form-control">
                            <div class="form-help">When to start showing this ad</div>
                        </div>
                        <div class="form-group">
                            <label for="end_date">End Date</label>
                            <input type="datetime-local" 
                                   id="end_date" 
                                   name="end_date" 
                                   class="form-control">
                            <div class="form-help">When to stop showing this ad</div>
                        </div>
                    </div>

                    <!-- Ad Statistics -->
                    <div class="form-group">
                        <label>Performance Statistics</label>
                        <div style="background: #f8f9fa; padding: 16px; border-radius: 8px; border: 1px solid #e9ecef;">
                            <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(120px, 1fr)); gap: 16px; text-align: center;">
                                <div>
                                    <div style="font-size: 24px; font-weight: bold; color: #007bff;">1,234</div>
                                    <div style="font-size: 12px; color: #6c757d; text-transform: uppercase;">Impressions</div>
                                </div>
                                <div id="clicksStats">
                                    <div style="font-size: 24px; font-weight: bold; color: #28a745;">89</div>
                                    <div style="font-size: 12px; color: #6c757d; text-transform: uppercase;">Clicks</div>
                                </div>
                                <div id="ctrStats">
                                    <div style="font-size: 24px; font-weight: bold; color: #ffc107;">7.21%</div>
                                    <div style="font-size: 12px; color: #6c757d; text-transform: uppercase;">CTR</div>
                                </div>
                                <div>
                                    <div style="font-size: 14px; font-weight: bold; color: #6c757d;">Jan 15, 2025</div>
                                    <div style="font-size: 12px; color: #6c757d; text-transform: uppercase;">Created</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Form Actions -->
            <div class="form-actions">
                <a href="/admin/ads" class="btn btn-secondary">
                    <i class="fas fa-times"></i>
                    Cancel
                </a>
                <button type="button" class="btn btn-warning" id="previewBtn">
                    <i class="fas fa-eye"></i>
                    Preview
                </button>
                <button type="button" class="btn btn-danger" id="deleteBtn">
                    <i class="fas fa-trash"></i>
                    Delete
                </button>
                <button type="submit" class="btn btn-primary btn-lg" id="submitBtn">
                    <i class="fas fa-save"></i>
                    Update Advertisement
                </button>
            </div>
        </form>
    </div>

    <!-- Debug Panel (only shows on localhost) -->
    <div class="debug-panel" id="debugPanel">
        <strong>Debug Panel:</strong><br>
        <button onclick="simulateAdTypeChange('image')">Image</button>
        <button onclick="simulateAdTypeChange('video')">Video</button>
        <button onclick="simulateAdTypeChange('google_ads')">Google Ads</button>
    </div>

    <!-- JavaScript -->
    <script>
        let selectedFile = null;
        let currentAdType = 'image'; // Default for demo

        // Initialize page
        document.addEventListener('DOMContentLoaded', function() {
            console.log('🚀 Initializing edit ad page...');
            
            // Setup file upload
            setupFileUpload();
            
            // Setup form validation
            setupFormValidation();
            
            // Setup button handlers
            setupButtonHandlers();
            
            // Initialize UI based on ad type
            initializeUIForAdType();
            
            // Show debug panel on localhost
            showDebugPanelIfLocal();
            
            console.log('✅ Edit ad page initialized');
        });

        // Show debug panel only on localhost
        function showDebugPanelIfLocal() {
            if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {
                const debugPanel = document.getElementById('debugPanel');
                if (debugPanel) {
                    debugPanel.classList.add('show');
                }
            }
        }

        // Setup button handlers
        function setupButtonHandlers() {
            // Preview button
            const previewBtn = document.getElementById('previewBtn');
            if (previewBtn) {
                previewBtn.addEventListener('click', previewAd);
            }

            // Delete button
            const deleteBtn = document.getElementById('deleteBtn');
            if (deleteBtn) {
                deleteBtn.addEventListener('click', deleteAd);
            }

            // Validate script button
            const validateScriptBtn = document.getElementById('validateScriptBtn');
            if (validateScriptBtn) {
                validateScriptBtn.addEventListener('click', validateGoogleAdsScript);
            }
        }

        // Initialize UI based on ad type
        function initializeUIForAdType() {
            const adType = document.getElementById('adType').value;
            currentAdType = adType;
            
            const currentMediaSection = document.getElementById('currentMediaSection');
            const currentGoogleAdsSection = document.getElementById('currentGoogleAdsSection');
            const replaceMediaSection = document.getElementById('replaceMediaSection');
            const googleAdsSection = document.getElementById('googleAdsSection');
            const clickUrlSection = document.getElementById('clickUrlSection');
            const durationSection = document.getElementById('durationSection');
            const clicksStats = document.getElementById('clicksStats');
            const ctrStats = document.getElementById('ctrStats');

            if (adType === 'google_ads') {
                // Show Google Ads sections
                if (currentMediaSection) currentMediaSection.style.display = 'none';
                if (currentGoogleAdsSection) currentGoogleAdsSection.style.display = 'block';
                if (replaceMediaSection) replaceMediaSection.style.display = 'none';
                if (googleAdsSection) googleAdsSection.style.display = 'block';
                if (clickUrlSection) clickUrlSection.style.display = 'none';
                if (durationSection) durationSection.style.display = 'none';
                
                // Hide click stats for Google Ads
                if (clicksStats) {
                    clicksStats.innerHTML = `
                        <div style="font-size: 18px; font-weight: bold; color: #f57c00;">
                            <i class="fab fa-google"></i> Managed
                        </div>
                        <div style="font-size: 12px; color: #6c757d; text-transform: uppercase;">By Google</div>
                    `;
                }
                if (ctrStats) ctrStats.style.display = 'none';
                
                // Update file input accept
                const fileInput = document.getElementById('media_file');
                if (fileInput) {
                    fileInput.removeAttribute('accept');
                    fileInput.required = false;
                }
                
                // Make Google Ads script required
                const googleAdsScript = document.getElementById('google_ads_script');
                if (googleAdsScript) {
                    googleAdsScript.required = true;
                }
                
                // Make click URL not required
                const clickUrl = document.getElementById('click_url');
                if (clickUrl) {
                    clickUrl.required = false;
                }
            } else {
                // Show media sections
                if (currentMediaSection) currentMediaSection.style.display = 'block';
                if (currentGoogleAdsSection) currentGoogleAdsSection.style.display = 'none';
                if (replaceMediaSection) replaceMediaSection.style.display = 'block';
                if (googleAdsSection) googleAdsSection.style.display = 'none';
                if (clickUrlSection) clickUrlSection.style.display = 'block';
                
                // Show video duration for video ads
                if (adType === 'video' && durationSection) {
                    durationSection.style.display = 'block';
                }
                
                // Show normal stats
                if (clicksStats) {
                    clicksStats.innerHTML = `
                        <div style="font-size: 24px; font-weight: bold; color: #28a745;">89</div>
                        <div style="font-size: 12px; color: #6c757d; text-transform: uppercase;">Clicks</div>
                    `;
                }
                if (ctrStats) ctrStats.style.display = 'block';
                
                // Update file input accept based on type
                const fileInput = document.getElementById('media_file');
                if (fileInput) {
                    fileInput.setAttribute('accept', adType === 'image' ? 'image/*' : 'video/*');
                    fileInput.required = false; // Optional replacement
                }
                
                // Update upload hint
                const uploadHint = document.querySelector('.file-upload-hint');
                if (uploadHint) {
                    if (adType === 'image') {
                        uploadHint.textContent = 'Leave empty to keep current file. Images: JPG, PNG, GIF (max 10MB)';
                    } else if (adType === 'video') {
                        uploadHint.textContent = 'Leave empty to keep current file. Videos: MP4, AVI, MOV, WEBM (max 50MB)';
                    }
                }
                
                // Make Google Ads script not required
                const googleAdsScript = document.getElementById('google_ads_script');
                if (googleAdsScript) {
                    googleAdsScript.required = false;
                }
                
                // Make click URL required
                const clickUrl = document.getElementById('click_url');
                if (clickUrl) {
                    clickUrl.required = true;
                }
            }
        }

        // Setup file upload
        function setupFileUpload() {
            const fileInput = document.getElementById('media_file');
            const uploadArea = document.querySelector('.file-upload-area');
            const preview = document.getElementById('filePreview');
            
            if (!fileInput || !uploadArea) return;
            
            // Click to upload
            uploadArea.addEventListener('click', function() {
                fileInput.click();
            });
            
            // File input change
            fileInput.addEventListener('change', function(e) {
                handleFileSelect(e.target.files[0]);
            });
            
            // Drag and drop
            uploadArea.addEventListener('dragover', function(e) {
                e.preventDefault();
                uploadArea.classList.add('dragover');
            });
            
            uploadArea.addEventListener('dragleave', function(e) {
                e.preventDefault();
                uploadArea.classList.remove('dragover');
            });
            
            uploadArea.addEventListener('drop', function(e) {
                e.preventDefault();
                uploadArea.classList.remove('dragover');
                
                const files = e.dataTransfer.files;
                if (files.length > 0) {
                    fileInput.files = files;
                    handleFileSelect(files[0]);
                }
            });
        }

        // Handle file selection
        function handleFileSelect(file) {
            if (!file) return;
            
            selectedFile = file;
            const preview = document.getElementById('filePreview');
            
            // Validate file
            const validation = validateFile(file);
            if (!validation.valid) {
                showNotification(validation.message, 'error');
                return;
            }
            
            // Show preview
            preview.style.display = 'block';
            
            if (file.type.startsWith('image/')) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    preview.innerHTML = `
                        <div style="margin-top: 16px;">
                            <h5 style="color: #28a745; margin-bottom: 12px;">
                                <i class="fas fa-check"></i> New file selected:
                            </h5>
                            <img src="${e.target.result}" alt="New preview" style="max-width: 200px; max-height: 150px; border-radius: 6px; box-shadow: 0 2px 8px rgba(0,0,0,0.1);">
                            <div style="margin-top: 12px; font-size: 13px; color: #6c757d;">
                                <strong>${file.name}</strong><br>
                                Size: ${formatFileSize(file.size)}<br>
                                Type: ${file.type}
                            </div>
                        </div>
                    `;
                };
                reader.readAsDataURL(file);
            } else if (file.type.startsWith('video/')) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    preview.innerHTML = `
                        <div style="margin-top: 16px;">
                            <h5 style="color: #28a745; margin-bottom: 12px;">
                                <i class="fas fa-check"></i> New file selected:
                            </h5>
                            <video controls style="max-width: 200px; max-height: 150px; border-radius: 6px; box-shadow: 0 2px 8px rgba(0,0,0,0.1);">
                                <source src="${e.target.result}" type="${file.type}">
                            </video>
                            <div style="margin-top: 12px; font-size: 13px; color: #6c757d;">
                                <strong>${file.name}</strong><br>
                                Size: ${formatFileSize(file.size)}<br>
                                Type: ${file.type}
                            </div>
                        </div>
                    `;
                };
                reader.readAsDataURL(file);
            }
        }

        // Validate file
        function validateFile(file) {
            const maxSizes = {
                image: 10 * 1024 * 1024, // 10MB
                video: 50 * 1024 * 1024  // 50MB
            };
            
            const allowedTypes = {
                image: ['image/jpeg', 'image/png', 'image/gif'],
                video: ['video/mp4', 'video/avi', 'video/mov', 'video/webm']
            };
            
            if (currentAdType === 'image') {
                if (!allowedTypes.image.includes(file.type)) {
                    return { valid: false, message: 'Invalid image format. Please use JPG, PNG, or GIF.' };
                }
                if (file.size > maxSizes.image) {
                    return { valid: false, message: 'Image file too large. Maximum size is 10MB.' };
                }
            } else if (currentAdType === 'video') {
                if (!allowedTypes.video.includes(file.type)) {
                    return { valid: false, message: 'Invalid video format. Please use MP4, AVI, MOV, or WEBM.' };
                }
                if (file.size > maxSizes.video) {
                    return { valid: false, message: 'Video file too large. Maximum size is 50MB.' };
                }
            }
            
            return { valid: true };
        }

        // Format file size
        function formatFileSize(bytes) {
            if (bytes === 0) return '0 Bytes';
            const k = 1024;
            const sizes = ['Bytes', 'KB', 'MB', 'GB'];
            const i = Math.floor(Math.log(bytes) / Math.log(k));
            return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
        }

        // Validate Google Ads script
        async function validateGoogleAdsScript() {
            const script = document.getElementById('google_ads_script').value.trim();
            const validation = document.getElementById('scriptValidation');
            
            if (!script) {
                validation.className = 'script-validation invalid';
                validation.style.display = 'block';
                validation.innerHTML = '<i class="fas fa-times"></i> Please enter a Google Ads script';
                return;
            }
            
            try {
                showNotification('Validating script...', 'info');
                
                // Basic validation for Google Ads script
                const hasAdsByGoogle = script.includes('adsbygoogle') || script.includes('googlesyndication');
                const hasScriptTag = script.includes('<script') && script.includes('</script>');
                
                validation.style.display = 'block';
                
                if (hasAdsByGoogle && hasScriptTag) {
                    validation.className = 'script-validation valid';
                    validation.innerHTML = '<i class="fas fa-check"></i> Script validation passed!';
                    showNotification('Script validation successful!', 'success');
                } else {
                    validation.className = 'script-validation invalid';
                    validation.innerHTML = '<i class="fas fa-times"></i> Invalid Google Ads script format';
                    showNotification('Script validation failed', 'error');
                }
            } catch (error) {
                console.error('Script validation error:', error);
                validation.className = 'script-validation invalid';
                validation.style.display = 'block';
                validation.innerHTML = '<i class="fas fa-times"></i> Failed to validate script. Please check your connection.';
                showNotification('Validation failed. Please try again.', 'error');
            }
        }

        // Setup form validation
        function setupFormValidation() {
            const form = document.getElementById('editAdForm');
            
            form.addEventListener('submit', function(e) {
                e.preventDefault();
                submitForm();
            });
            
            // Real-time validation
            const requiredFields = ['title', 'slot_position'];
            requiredFields.forEach(fieldId => {
                const field = document.getElementById(fieldId);
                if (field) {
                    field.addEventListener('blur', function() {
                        validateField(this);
                    });
                }
            });
        }

        // Validate individual field
        function validateField(field) {
            const value = field.value.trim();
            
            if (field.required && !value) {
                field.style.borderColor = '#dc3545';
                return false;
            } else {
                field.style.borderColor = '#28a745';
                return true;
            }
        }

        // Submit form
        async function submitForm() {
            if (!validateForm()) {
                return;
            }
            
            const submitBtn = document.getElementById('submitBtn');
            const originalText = submitBtn.innerHTML;
            
            // Show loading state
            submitBtn.disabled = true;
            submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Updating...';
            
            try {
                const formData = new FormData(document.getElementById('editAdForm'));
                
                showNotification('Updating advertisement...', 'info');
                
                const response = await fetch('/admin/ads/1', {
                    method: 'POST',
                    body: formData
                });
                
                const data = await response.json();
                
                if (data.success) {
                    showNotification('Advertisement updated successfully!', 'success');
                    setTimeout(() => {
                        window.location.href = '/admin/ads';
                    }, 1500);
                } else {
                    showNotification(data.message || 'Failed to update advertisement', 'error');
                    
                    // Highlight field with error if specified
                    if (data.field) {
                        const field = document.getElementById(data.field);
                        if (field) {
                            field.style.borderColor = '#dc3545';
                            field.focus();
                        }
                    }
                }
            } catch (error) {
                console.error('Submit error:', error);
                showNotification('Failed to update advertisement. Please try again.', 'error');
            } finally {
                // Restore button
                submitBtn.disabled = false;
                submitBtn.innerHTML = originalText;
            }
        }

        // Validate form
        function validateForm() {
            // Check title
            const title = document.getElementById('title').value.trim();
            if (!title) {
                showNotification('Please enter a title', 'error');
                document.getElementById('title').focus();
                return false;
            }
            
            // Check slot position
            const slotPosition = document.getElementById('slot_position').value;
            if (!slotPosition) {
                showNotification('Please select a slot position', 'error');
                document.getElementById('slot_position').focus();
                return false;
            }
            
            // Type-specific validation
            if (currentAdType === 'google_ads') {
                const script = document.getElementById('google_ads_script').value.trim();
                if (!script) {
                    showNotification('Please enter a Google Ads script', 'error');
                    document.getElementById('google_ads_script').focus();
                    return false;
                }
            } else {
                // Check click URL
                const clickUrl = document.getElementById('click_url').value.trim();
                if (!clickUrl) {
                    showNotification('Please enter a click URL', 'error');
                    document.getElementById('click_url').focus();
                    return false;
                }
                
                // Validate URL format
                try {
                    new URL(clickUrl);
                } catch {
                    showNotification('Please enter a valid URL', 'error');
                    document.getElementById('click_url').focus();
                    return false;
                }
            }
            
            return true;
        }

        // Preview ad
        function previewAd() {
            if (!validateForm()) {
                return;
            }
            
            showNotification('Opening preview in new window...', 'info');
            window.open('/admin/ads/1/preview', '_blank');
        }

        // Delete ad
        function deleteAd() {
            if (!confirm('Are you sure you want to delete this advertisement? This action cannot be undone.')) {
                return;
            }
            
            const deleteBtn = document.getElementById('deleteBtn');
            const originalText = deleteBtn.innerHTML;
            
            deleteBtn.disabled = true;
            deleteBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Deleting...';
            
            showNotification('Deleting advertisement...', 'info');
            
            fetch('/admin/ads/1', {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showNotification('Advertisement deleted successfully!', 'success');
                    setTimeout(() => {
                        window.location.href = '/admin/ads';
                    }, 1500);
                } else {
                    showNotification(data.message || 'Failed to delete advertisement', 'error');
                    deleteBtn.disabled = false;
                    deleteBtn.innerHTML = originalText;
                }
            })
            .catch(error => {
                console.error('Delete error:', error);
                showNotification('Failed to delete advertisement', 'error');
                deleteBtn.disabled = false;
                deleteBtn.innerHTML = originalText;
            });
        }

        // Show notification
        function showNotification(message, type = 'info') {
            // Remove existing notifications
            document.querySelectorAll('.notification').forEach(n => n.remove());
            
            const icons = {
                success: 'check-circle',
                error: 'times-circle',
                warning: 'exclamation-triangle',
                info: 'info-circle'
            };
            
            const notification = document.createElement('div');
            notification.className = `notification notification-${type}`;
            notification.innerHTML = `
                <i class="fas fa-${icons[type] || 'info-circle'}"></i>
                <span>${message}</span>
            `;
            
            document.body.appendChild(notification);
            
            // Auto-remove after 5 seconds
            setTimeout(() => {
                if (notification.parentNode) {
                    notification.style.animation = 'slideOutRight 0.3s ease';
                    setTimeout(() => notification.remove(), 300);
                }
            }, 5000);
        }

        // Demo function to simulate changing ad type for testing
        function simulateAdTypeChange(newType) {
            currentAdType = newType;
            document.getElementById('adType').value = newType;
            
            // Update type display
            const typeDisplay = document.getElementById('adTypeDisplay');
            if (typeDisplay) {
                const iconClass = newType === 'video' ? 'video' : newType === 'google_ads' ? 'code' : 'image';
                const typeName = newType === 'google_ads' ? 'Google Ads' : newType.charAt(0).toUpperCase() + newType.slice(1);
                typeDisplay.innerHTML = `
                    <i class="fas fa-${iconClass}"></i>
                    ${typeName}
                    <small style="float: right; font-style: italic;">Type cannot be changed</small>
                `;
            }
            
            // Update current media display for demo
            updateCurrentMediaDisplay(newType);
            
            // Reinitialize UI
            initializeUIForAdType();
            
            showNotification(`Simulated ad type change to: ${typeName}`, 'info');
        }

        // Update current media display for demo
        function updateCurrentMediaDisplay(adType) {
            const currentMediaSection = document.getElementById('currentMediaSection');
            const currentGoogleAdsSection = document.getElementById('currentGoogleAdsSection');
            
            if (adType === 'google_ads') {
                return; // Handled by initializeUIForAdType
            }
            
            if (currentMediaSection) {
                const mediaContent = currentMediaSection.querySelector('.current-media');
                if (mediaContent) {
                    if (adType === 'image') {
                        mediaContent.innerHTML = `
                            <h5>Current image:</h5>
                            <img src="https://via.placeholder.com/300x200/007bff/white?text=Sample+Image" alt="Sample Ad" style="display: block;">
                            <div class="current-media-info">
                                <strong>File:</strong> /uploads/sample-image.jpg<br>
                                <strong>Uploaded:</strong> January 15, 2025
                            </div>
                        `;
                    } else if (adType === 'video') {
                        mediaContent.innerHTML = `
                            <h5>Current video:</h5>
                            <video controls style="display: block; max-width: 200px; max-height: 150px;">
                                <source src="https://sample-videos.com/zip/10/mp4/SampleVideo_1280x720_1mb.mp4" type="video/mp4">
                                Your browser does not support the video tag.
                            </video>
                            <div class="current-media-info">
                                <strong>File:</strong> /uploads/sample-video.mp4<br>
                                <strong>Uploaded:</strong> January 15, 2025
                            </div>
                        `;
                    }
                }
            }
        }

        // Handle type change (legacy function for compatibility)
        function handleTypeChange(select) {
            // Type cannot be changed in edit mode
            console.log('Type change not allowed in edit mode');
        }

        // Auto-save draft (optional feature)
        let draftTimer;
        function startDraftSaving() {
            // Save form data to localStorage every 30 seconds
            draftTimer = setInterval(() => {
                const formData = new FormData(document.getElementById('editAdForm'));
                const draft = {};
                for (let [key, value] of formData.entries()) {
                    if (key !== 'media_file') { // Don't save file
                        draft[key] = value;
                    }
                }
                localStorage.setItem('ad_edit_draft', JSON.stringify(draft));
                console.log('📝 Edit draft saved');
            }, 30000);
        }

        // Load draft on page load
        function loadDraft() {
            const draft = localStorage.getItem('ad_edit_draft');
            if (draft) {
                try {
                    const data = JSON.parse(draft);
                    Object.keys(data).forEach(key => {
                        const field = document.getElementById(key);
                        if (field && field.type !== 'file' && field.type !== 'hidden') {
                            if (field.type === 'checkbox') {
                                field.checked = data[key] === 'on';
                            } else {
                                field.value = data[key];
                            }
                        }
                    });
                    showNotification('Draft loaded', 'info');
                } catch (error) {
                    console.error('Failed to load draft:', error);
                }
            }
        }

        // Clear draft
        function clearDraft() {
            localStorage.removeItem('ad_edit_draft');
            if (draftTimer) {
                clearInterval(draftTimer);
            }
        }

        // Initialize draft features
        window.addEventListener('load', () => {
            // Uncomment to enable draft saving
            // loadDraft();
            // startDraftSaving();
        });

        window.addEventListener('beforeunload', () => {
            // clearDraft();
        });

        // Keyboard shortcuts
        document.addEventListener('keydown', function(e) {
            // Ctrl+S to save
            if (e.ctrlKey && e.key === 's') {
                e.preventDefault();
                submitForm();
            }
            
            // Ctrl+P to preview
            if (e.ctrlKey && e.key === 'p') {
                e.preventDefault();
                previewAd();
            }
            
            // Escape to cancel
            if (e.key === 'Escape') {
                window.location.href = '/admin/ads';
            }
        });

        // Add tooltip for keyboard shortcuts
        window.addEventListener('load', () => {
            const submitBtn = document.getElementById('submitBtn');
            const previewBtn = document.getElementById('previewBtn');
            
            if (submitBtn) {
                submitBtn.title = 'Save (Ctrl+S)';
            }
            
            if (previewBtn) {
                previewBtn.title = 'Preview (Ctrl+P)';
            }
        });
    </script>
</body>
</html>
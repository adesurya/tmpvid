<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>API & RSS Dashboard - Admin Panel</title>
    
    <!-- Font Awesome for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: #333;
        }

        .dashboard-container {
            display: flex;
            min-height: 100vh;
        }

        /* Sidebar */
        .sidebar {
            width: 280px;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-right: 1px solid rgba(255, 255, 255, 0.2);
            padding: 2rem 0;
            position: fixed;
            height: 100vh;
            overflow-y: auto;
            transition: transform 0.3s ease;
            z-index: 1000;
        }

        .sidebar.mobile-hidden {
            transform: translateX(-100%);
        }

        .logo {
            text-align: center;
            margin-bottom: 2rem;
            padding: 0 1.5rem;
        }

        .logo h1 {
            background: linear-gradient(45deg, #ff6b6b, #4ecdc4);
            background-clip: text;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            font-size: 2rem;
            font-weight: bold;
        }

        .nav-menu {
            list-style: none;
            padding: 0 1rem;
        }

        .nav-item {
            margin-bottom: 0.5rem;
        }

        .nav-link {
            display: flex;
            align-items: center;
            padding: 1rem 1.5rem;
            color: #666;
            text-decoration: none;
            border-radius: 12px;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .nav-link:hover,
        .nav-link.active {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            transform: translateX(5px);
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.3);
        }

        .nav-link i {
            margin-right: 1rem;
            font-size: 1.2rem;
            width: 24px;
            text-align: center;
        }

        .nav-link span {
            font-weight: 500;
        }

        /* Main Content */
        .main-content {
            flex: 1;
            margin-left: 280px;
            padding: 2rem;
            transition: margin-left 0.3s ease;
        }

        .main-content.sidebar-collapsed {
            margin-left: 0;
        }

        /* API Dashboard Header */
        .api-dashboard-header {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 20px;
            padding: 2rem;
            margin-bottom: 2rem;
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.1);
            position: relative;
            overflow: hidden;
        }

        .api-dashboard-header::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(90deg, #27ae60, #2ecc71, #3498db);
            background-size: 300% 100%;
            animation: gradientFlow 3s ease infinite;
        }

        @keyframes gradientFlow {
            0%, 100% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
        }

        .mobile-toggle {
            display: none;
            background: none;
            border: none;
            font-size: 1.5rem;
            color: #666;
            cursor: pointer;
            margin-right: 1rem;
        }

        .api-header-content {
            text-align: center;
        }

        .api-header-title {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 1rem;
            margin-bottom: 1rem;
        }

        .api-header-title h2 {
            font-size: 2.5rem;
            font-weight: 700;
            background: linear-gradient(45deg, #27ae60, #3498db);
            background-clip: text;
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            margin: 0;
        }

        .api-header-title .title-icon {
            width: 60px;
            height: 60px;
            background: linear-gradient(45deg, #27ae60, #3498db);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1.5rem;
        }

        .api-header-subtitle {
            color: #7f8c8d;
            font-size: 1.1rem;
            margin: 0;
        }

        /* API Statistics Grid */
        .api-stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .api-stat-card {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 20px;
            padding: 2rem;
            text-align: center;
            position: relative;
            overflow: hidden;
            transition: all 0.3s ease;
            cursor: pointer;
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.1);
        }

        .api-stat-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: var(--accent-gradient);
        }

        .api-stat-card:hover {
            transform: translateY(-8px);
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
        }

        .api-stat-card.videos {
            --accent-gradient: linear-gradient(45deg, #3498db, #2980b9);
        }

        .api-stat-card.views {
            --accent-gradient: linear-gradient(45deg, #27ae60, #2ecc71);
        }

        .api-stat-card.categories {
            --accent-gradient: linear-gradient(45deg, #e74c3c, #c0392b);
        }

        .api-stat-card.rss {
            --accent-gradient: linear-gradient(45deg, #f39c12, #e67e22);
        }

        .api-stat-icon {
            width: 70px;
            height: 70px;
            margin: 0 auto 1rem;
            border-radius: 50%;
            background: var(--accent-gradient);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 1.5rem;
            transition: transform 0.3s ease;
        }

        .api-stat-card:hover .api-stat-icon {
            transform: scale(1.1);
        }

        .api-stat-number {
            font-size: 2rem;
            font-weight: bold;
            color: #2c3e50;
            margin-bottom: 0.5rem;
        }

        .api-stat-label {
            color: #7f8c8d;
            font-size: 0.9rem;
            font-weight: 500;
            opacity: 0.9;
        }

        /* API Endpoints Section */
        .api-endpoints-section {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 20px;
            padding: 2rem;
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.1);
            margin-bottom: 2rem;
            position: relative;
            overflow: hidden;
        }

        .api-endpoints-section::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(90deg, #667eea, #764ba2);
        }

        .api-endpoints-title {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            margin-bottom: 1.5rem;
            color: #2c3e50;
            font-size: 1.5rem;
            font-weight: 600;
        }

        .api-endpoints-grid {
            display: grid;
            gap: 1.5rem;
        }

        .api-endpoint-card {
            background: rgba(255, 255, 255, 0.8);
            backdrop-filter: blur(10px);
            border: 2px solid rgba(255, 255, 255, 0.2);
            border-radius: 15px;
            padding: 1.5rem;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .api-endpoint-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 3px;
            background: var(--endpoint-gradient);
        }

        .api-endpoint-card.get {
            --endpoint-gradient: linear-gradient(90deg, #27ae60, #2ecc71);
        }

        .api-endpoint-card.rss {
            --endpoint-gradient: linear-gradient(90deg, #f39c12, #e67e22);
        }

        .api-endpoint-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.15);
            border-color: rgba(102, 126, 234, 0.3);
        }

        .api-endpoint-header {
            display: flex;
            align-items: center;
            gap: 1rem;
            margin-bottom: 1rem;
        }

        .api-method-badge {
            padding: 0.25rem 0.75rem;
            border-radius: 20px;
            font-size: 0.75rem;
            font-weight: 600;
            text-transform: uppercase;
            color: white;
        }

        .api-method-badge.get {
            background: linear-gradient(135deg, #27ae60, #2ecc71);
        }

        .api-method-badge.rss {
            background: linear-gradient(135deg, #f39c12, #e67e22);
        }

        .api-endpoint-title {
            color: #2c3e50;
            font-size: 1.1rem;
            font-weight: 600;
            margin: 0;
        }

        .api-endpoint-description {
            color: #7f8c8d;
            margin-bottom: 1rem;
            line-height: 1.5;
        }

        .api-endpoint-url {
            background: rgba(248, 249, 250, 0.8);
            backdrop-filter: blur(10px);
            padding: 1rem;
            border-radius: 8px;
            font-family: 'Courier New', monospace;
            font-size: 0.85rem;
            color: #2c3e50;
            margin-bottom: 1rem;
            border: 1px solid rgba(0, 0, 0, 0.1);
            word-break: break-all;
        }

        .api-endpoint-actions {
            display: flex;
            gap: 0.75rem;
            flex-wrap: wrap;
        }

        /* Buttons */
        .btn {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            padding: 0.5rem 1rem;
            border: none;
            border-radius: 25px;
            cursor: pointer;
            font-size: 0.8rem;
            font-weight: 600;
            text-decoration: none;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
            transition: left 0.5s;
        }

        .btn:hover::before {
            left: 100%;
        }

        .btn-primary {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.4);
        }

        .btn-success {
            background: linear-gradient(135deg, #27ae60, #2ecc71);
            color: white;
            box-shadow: 0 4px 15px rgba(39, 174, 96, 0.3);
        }

        .btn-success:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(39, 174, 96, 0.4);
        }

        /* API Testing Section */
        .api-testing-section {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-radius: 20px;
            padding: 2rem;
            box-shadow: 0 8px 30px rgba(0, 0, 0, 0.1);
            position: relative;
            overflow: hidden;
        }

        .api-testing-section::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(90deg, #667eea, #764ba2, #e74c3c);
        }

        .api-testing-title {
            display: flex;
            align-items: center;
            gap: 0.75rem;
            margin-bottom: 1.5rem;
            color: #2c3e50;
            font-size: 1.5rem;
            font-weight: 600;
        }

        .api-testing-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 2rem;
        }

        .api-testing-panel {
            background: rgba(255, 255, 255, 0.8);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 1.5rem;
            border: 2px solid rgba(255, 255, 255, 0.2);
            transition: all 0.3s ease;
        }

        .api-testing-panel:hover {
            border-color: rgba(102, 126, 234, 0.3);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        }

        .api-testing-panel h4 {
            color: #2c3e50;
            margin-bottom: 1rem;
            font-size: 1.1rem;
            font-weight: 600;
        }

        .form-group {
            margin-bottom: 1rem;
        }

        .form-label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 600;
            color: #2c3e50;
            font-size: 0.9rem;
        }

        .form-control {
            width: 100%;
            padding: 0.75rem 1rem;
            border: 2px solid rgba(0, 0, 0, 0.1);
            border-radius: 8px;
            font-size: 0.9rem;
            transition: all 0.3s ease;
            background: rgba(255, 255, 255, 0.8);
            backdrop-filter: blur(10px);
        }

        .form-control:focus {
            outline: none;
            border-color: #667eea;
            background: rgba(255, 255, 255, 0.95);
            box-shadow: 0 0 0 4px rgba(102, 126, 234, 0.1);
        }

        .api-response-container {
            background: rgba(248, 249, 250, 0.8);
            backdrop-filter: blur(10px);
            border: 2px solid rgba(0, 0, 0, 0.1);
            border-radius: 8px;
            padding: 1rem;
            min-height: 200px;
            font-family: 'Courier New', monospace;
            font-size: 0.8rem;
            white-space: pre-wrap;
            overflow-y: auto;
            max-height: 400px;
            color: #2c3e50;
            line-height: 1.4;
        }

        /* Overlay for mobile */
        .overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.5);
            z-index: 999;
        }

        .overlay.active {
            display: block;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .sidebar {
                transform: translateX(-100%);
            }

            .sidebar.mobile-visible {
                transform: translateX(0);
            }

            .main-content {
                margin-left: 0;
                padding: 1rem;
            }

            .mobile-toggle {
                display: block;
            }

            .api-dashboard-header {
                padding: 1.5rem;
            }

            .api-header-title {
                flex-direction: column;
                gap: 1rem;
            }

            .api-header-title h2 {
                font-size: 2rem;
            }

            .api-stats-grid {
                grid-template-columns: repeat(2, 1fr);
            }

            .api-testing-grid {
                grid-template-columns: 1fr;
            }

            .api-endpoint-actions {
                justify-content: center;
            }

            .api-endpoints-section,
            .api-testing-section {
                padding: 1.5rem;
            }
        }

        @media (max-width: 480px) {
            .api-stats-grid {
                grid-template-columns: 1fr;
            }

            .api-header-title .title-icon {
                width: 50px;
                height: 50px;
                font-size: 1.2rem;
            }

            .api-stat-icon {
                width: 60px;
                height: 60px;
                font-size: 1.25rem;
            }

            .api-stat-number {
                font-size: 1.5rem;
            }

            .api-endpoint-card {
                padding: 1rem;
            }
        }

        /* Loading and Success States */
        .loading {
            opacity: 0.7;
            pointer-events: none;
        }

        .success-response {
            color: #27ae60 !important;
        }

        .error-response {
            color: #e74c3c !important;
        }

        /* Animations */
        .api-stat-card,
        .api-endpoint-card,
        .api-testing-panel {
            animation: fadeInUp 0.6s ease forwards;
        }

        .api-stat-card:nth-child(1) { animation-delay: 0.1s; }
        .api-stat-card:nth-child(2) { animation-delay: 0.2s; }
        .api-stat-card:nth-child(3) { animation-delay: 0.3s; }
        .api-stat-card:nth-child(4) { animation-delay: 0.4s; }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Custom scrollbar */
        .api-response-container::-webkit-scrollbar {
            width: 6px;
        }

        .api-response-container::-webkit-scrollbar-track {
            background: rgba(0, 0, 0, 0.05);
            border-radius: 3px;
        }

        .api-response-container::-webkit-scrollbar-thumb {
            background: linear-gradient(135deg, #667eea, #764ba2);
            border-radius: 3px;
        }

        .api-response-container::-webkit-scrollbar-thumb:hover {
            background: linear-gradient(135deg, #5d6fd8, #6a42a0);
        }
    </style>
</head>

<body>
    <div class="dashboard-container">
        <!-- Sidebar -->
        <nav class="sidebar" id="sidebar">
            <div class="logo">
                <h1><i class="fas fa-video"></i> KlipQ</h1>
            </div>
            
            <ul class="nav-menu">
                <li class="nav-item">
                    <a href="/admin" class="nav-link">
                        <i class="fas fa-home"></i>
                        <span>Dashboard</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/admin/videos" class="nav-link">
                        <i class="fas fa-video"></i>
                        <span>Videos</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/admin/categories" class="nav-link">
                        <i class="fas fa-tags"></i>
                        <span>Categories</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/admin/series" class="nav-link">
                        <i class="fas fa-list"></i>
                        <span>Series</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/admin/users" class="nav-link">
                        <i class="fas fa-users"></i>
                        <span>Users</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/admin/analytics" class="nav-link">
                        <i class="fas fa-chart-line"></i>
                        <span>Analytics</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/admin/ads" class="nav-link">
                        <i class="fas fa-bullhorn"></i>
                        <span>Advertisements</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/admin/settings" class="nav-link">
                        <i class="fas fa-cog"></i>
                        <span>Settings</span>
                    </a>
                </li>
                <li class="nav-item">
                    <a href="/admin/api-dashboard" class="nav-link active">
                        <i class="fas fa-code"></i>
                        <span>API & RSS</span>
                    </a>
                </li>
            </ul>
        </nav>

        <!-- Overlay for mobile -->
        <div class="overlay" id="overlay"></div>

        <!-- Main Content -->
        <main class="main-content" id="mainContent">
            <!-- API Dashboard Header -->
            <div class="api-dashboard-header">
                <button class="mobile-toggle" id="mobileToggle">
                    <i class="fas fa-bars"></i>
                </button>
                <div class="api-header-content">
                    <div class="api-header-title">
                        <div class="title-icon">
                            <i class="fas fa-code"></i>
                        </div>
                        <h2>API & RSS Feed Dashboard</h2>
                    </div>
                    <p class="api-header-subtitle">Manage and monitor your public API endpoints and RSS feeds</p>
                </div>
            </div>

            <!-- API Statistics -->
            <div class="api-stats-grid">
                <div class="api-stat-card videos">
                    <div class="api-stat-icon">
                        <i class="fas fa-database"></i>
                    </div>
                    <div class="api-stat-number" id="totalApiVideos">-</div>
                    <div class="api-stat-label">Published Videos</div>
                </div>
                
                <div class="api-stat-card views">
                    <div class="api-stat-icon">
                        <i class="fas fa-eye"></i>
                    </div>
                    <div class="api-stat-number" id="totalApiViews">-</div>
                    <div class="api-stat-label">Total Views</div>
                </div>
                
                <div class="api-stat-card categories">
                    <div class="api-stat-icon">
                        <i class="fas fa-tags"></i>
                    </div>
                    <div class="api-stat-number" id="totalApiCategories">-</div>
                    <div class="api-stat-label">Categories</div>
                </div>
                
                <div class="api-stat-card rss">
                    <div class="api-stat-icon">
                        <i class="fas fa-rss"></i>
                    </div>
                    <div class="api-stat-number" id="rssSubscribers">-</div>
                    <div class="api-stat-label">RSS Active</div>
                </div>
            </div>

            <!-- API Endpoints Section -->
            <div class="api-endpoints-section">
                <h3 class="api-endpoints-title">
                    <i class="fas fa-plug"></i>
                    Available API Endpoints
                </h3>
                
                <div class="api-endpoints-grid">
                    <!-- Public Feed API -->
                    <div class="api-endpoint-card get">
                        <div class="api-endpoint-header">
                            <span class="api-method-badge get">GET</span>
                            <h4 class="api-endpoint-title">Public Video Feed</h4>
                        </div>
                        <p class="api-endpoint-description">Get paginated video feed with filtering and sorting options</p>
                        <div class="api-endpoint-url" id="feedEndpoint">
                            Loading...
                        </div>
                        <div class="api-endpoint-actions">
                            <button onclick="testEndpoint('/api/public/feed?limit=5')" class="btn btn-primary">
                                <i class="fas fa-play"></i> Test
                            </button>
                            <a href="/api/public/docs" target="_blank" class="btn btn-success">
                                <i class="fas fa-book"></i> Docs
                            </a>
                        </div>
                    </div>

                    <!-- RSS Feed -->
                    <div class="api-endpoint-card rss">
                        <div class="api-endpoint-header">
                            <span class="api-method-badge rss">RSS</span>
                            <h4 class="api-endpoint-title">RSS Feed</h4>
                        </div>
                        <p class="api-endpoint-description">XML RSS feed for blog readers and content aggregators</p>
                        <div class="api-endpoint-url" id="rssEndpoint">
                            Loading...
                        </div>
                        <div class="api-endpoint-actions">
                            <a href="/api/public/rss" target="_blank" class="btn btn-primary">
                                <i class="fas fa-rss"></i> View RSS
                            </a>
                        </div>
                    </div>
                </div>
            </div>

            <!-- API Testing Section -->
            <div class="api-testing-section">
                <h3 class="api-testing-title">
                    <i class="fas fa-flask"></i>
                    API Testing Console
                </h3>
                
                <div class="api-testing-grid">
                    <!-- Request Section -->
                    <div class="api-testing-panel">
                        <h4>Test Request</h4>
                        <div class="form-group">
                            <label class="form-label">Endpoint:</label>
                            <select id="testEndpointSelect" class="form-control">
                                <option value="/api/public/feed?limit=5">Public Feed (5 videos)</option>
                                <option value="/api/public/categories">Categories</option>
                                <option value="/api/public/stats">Platform Stats</option>
                            </select>
                        </div>
                        <button onclick="testCustomEndpoint()" class="btn btn-primary" style="width: 100%;">
                            <i class="fas fa-play"></i> Test API Endpoint
                        </button>
                    </div>

                    <!-- Response Section -->
                    <div class="api-testing-panel">
                        <h4>Response</h4>
                        <div id="apiResponse" class="api-response-container">
                            Click "Test API Endpoint" to see response...
                        </div>
                    </div>
                </div>
            </div>
        </main>
    </div>

    <script>
        let baseUrl = '';

        document.addEventListener('DOMContentLoaded', function() {
            console.log('🚀 Initializing API dashboard...');
            
            // Mobile navigation
            const mobileToggle = document.getElementById('mobileToggle');
            const sidebar = document.getElementById('sidebar');
            const overlay = document.getElementById('overlay');

            function toggleSidebar() {
                sidebar.classList.toggle('mobile-visible');
                overlay.classList.toggle('active');
            }

            mobileToggle.addEventListener('click', toggleSidebar);
            overlay.addEventListener('click', toggleSidebar);

            // Responsive handling
            window.addEventListener('resize', function() {
                if (window.innerWidth > 768) {
                    sidebar.classList.remove('mobile-visible');
                    overlay.classList.remove('active');
                }
            });

            baseUrl = window.location.origin;
            initializeEndpoints();
            loadApiStats();
            
            console.log('✅ API dashboard initialized');
        });

        function initializeEndpoints() {
            document.getElementById('feedEndpoint').textContent = `${baseUrl}/api/public/feed?page=1&limit=20&sort=latest`;
            document.getElementById('rssEndpoint').textContent = `${baseUrl}/api/public/rss`;
        }

        async function loadApiStats() {
            try {
                const response = await fetch('/api/public/stats');
                const data = await response.json();
                
                if (data.success) {
                    // Animate stats update
                    animateNumber('totalApiVideos', data.data.overview.total_videos || 0);
                    animateNumber('totalApiViews', data.data.overview.total_views || 0, true);
                    animateNumber('totalApiCategories', data.data.overview.total_categories || 0);
                    
                    document.getElementById('rssSubscribers').textContent = 'Ready';
                }
            } catch (error) {
                console.error('Failed to load API stats:', error);
                document.getElementById('totalApiVideos').textContent = '0';
                document.getElementById('totalApiViews').textContent = '0';
                document.getElementById('totalApiCategories').textContent = '0';
                document.getElementById('rssSubscribers').textContent = 'Error';
            }
        }

        function animateNumber(elementId, targetValue, formatNumber = false) {
            const element = document.getElementById(elementId);
            const startValue = 0;
            const duration = 1500;
            const increment = targetValue / (duration / 16);
            let currentValue = startValue;

            const timer = setInterval(() => {
                currentValue += increment;
                if (currentValue >= targetValue) {
                    currentValue = targetValue;
                    clearInterval(timer);
                }
                
                const displayValue = formatNumber ? 
                    formatNumberHelper(Math.floor(currentValue)) : 
                    Math.floor(currentValue).toString();
                    
                element.textContent = displayValue;
            }, 16);
        }

        async function testEndpoint(endpoint) {
            const responseDiv = document.getElementById('apiResponse');
            const testButton = event.target;
            
            // Add loading state
            const originalText = testButton.innerHTML;
            testButton.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Testing...';
            testButton.disabled = true;
            testButton.classList.add('loading');
            
            responseDiv.textContent = 'Loading...';
            responseDiv.className = 'api-response-container';
            
            try {
                const response = await fetch(endpoint);
                const data = await response.json();
                
                const formattedResponse = JSON.stringify(data, null, 2);
                responseDiv.textContent = `Status: ${response.status} ${response.statusText}\n\n${formattedResponse}`;
                
                if (response.ok) {
                    responseDiv.classList.add('success-response');
                    showNotification('API test successful!', 'success');
                } else {
                    responseDiv.classList.add('error-response');
                    showNotification('API test failed', 'error');
                }
            } catch (error) {
                responseDiv.textContent = `Error: ${error.message}`;
                responseDiv.classList.add('error-response');
                showNotification('Network error occurred', 'error');
            } finally {
                // Remove loading state
                testButton.innerHTML = originalText;
                testButton.disabled = false;
                testButton.classList.remove('loading');
            }
        }

        async function testCustomEndpoint() {
            const select = document.getElementById('testEndpointSelect');
            const endpoint = select.value;
            
            if (!endpoint) {
                showNotification('Please select an endpoint to test', 'warning');
                return;
            }
            
            let fullUrl = endpoint;
            if (!endpoint.startsWith('http')) {
                fullUrl = baseUrl + endpoint;
            }
            
            await testEndpoint(fullUrl);
        }

        function formatNumberHelper(num) {
            if (num >= 1000000) {
                return (num / 1000000).toFixed(1) + 'M';
            } else if (num >= 1000) {
                return (num / 1000).toFixed(1) + 'K';
            }
            return num.toString();
        }

        // Show notification function
        function showNotification(message, type = 'info') {
            // Remove existing notifications
            document.querySelectorAll('.notification').forEach(n => n.remove());
            
            const icons = {
                success: 'check-circle',
                error: 'times-circle',
                warning: 'exclamation-triangle',
                info: 'info-circle'
            };
            
            const notification = document.createElement('div');
            notification.className = `notification notification-${type}`;
            notification.innerHTML = `
                <i class="fas fa-${icons[type] || 'info-circle'}"></i>
                <span>${message}</span>
            `;
            
            // Add notification styles
            notification.style.cssText = `
                position: fixed;
                top: 2rem;
                right: 2rem;
                padding: 1rem 1.5rem;
                border-radius: 15px;
                color: white;
                z-index: 10000;
                display: flex;
                align-items: center;
                gap: 0.75rem;
                font-weight: 600;
                box-shadow: 0 8px 30px rgba(0,0,0,0.3);
                animation: slideInRight 0.4s cubic-bezier(0.34, 1.56, 0.64, 1);
                backdrop-filter: blur(10px);
                max-width: 400px;
                min-width: 300px;
            `;
            
            // Set background color based on type
            const colors = {
                success: 'linear-gradient(135deg, #27ae60, #2ecc71)',
                error: 'linear-gradient(135deg, #e74c3c, #c0392b)',
                warning: 'linear-gradient(135deg, #f39c12, #e67e22)',
                info: 'linear-gradient(135deg, #3498db, #2980b9)'
            };
            
            notification.style.background = colors[type] || colors.info;
            
            document.body.appendChild(notification);
            
            // Auto-remove after 4 seconds
            setTimeout(() => {
                if (notification.parentNode) {
                    notification.style.animation = 'slideOutRight 0.3s ease';
                    setTimeout(() => notification.remove(), 300);
                }
            }, 4000);
        }

        // Add CSS animations for notifications
        const style = document.createElement('style');
        style.textContent = `
            @keyframes slideInRight {
                from {
                    transform: translateX(100%);
                    opacity: 0;
                }
                to {
                    transform: translateX(0);
                    opacity: 1;
                }
            }
            
            @keyframes slideOutRight {
                from {
                    transform: translateX(0);
                    opacity: 1;
                }
                to {
                    transform: translateX(100%);
                    opacity: 0;
                }
            }

            /* Responsive notification styles */
            @media (max-width: 768px) {
                .notification {
                    left: 1rem !important;
                    right: 1rem !important;
                    top: 1rem !important;
                    max-width: none !important;
                    min-width: auto !important;
                }
            }

            /* Enhanced button loading state */
            .btn.loading {
                opacity: 0.7;
                cursor: not-allowed;
                transform: none !important;
            }

            .btn:disabled {
                opacity: 0.6;
                cursor: not-allowed;
                transform: none !important;
            }

            /* Copy to clipboard functionality */
            .api-endpoint-url {
                position: relative;
                cursor: pointer;
                transition: all 0.3s ease;
            }

            .api-endpoint-url:hover {
                background: rgba(102, 126, 234, 0.1);
                border-color: rgba(102, 126, 234, 0.3);
            }

            .copy-tooltip {
                position: absolute;
                top: -2rem;
                right: 0.5rem;
                background: #2c3e50;
                color: white;
                padding: 0.25rem 0.5rem;
                border-radius: 4px;
                font-size: 0.7rem;
                opacity: 0;
                transition: opacity 0.3s ease;
                pointer-events: none;
            }

            .copy-tooltip.show {
                opacity: 1;
            }
        `;
        document.head.appendChild(style);

        // Add copy to clipboard functionality
        function addCopyToClipboard() {
            const endpointUrls = document.querySelectorAll('.api-endpoint-url');
            
            endpointUrls.forEach(url => {
                url.addEventListener('click', async function() {
                    try {
                        await navigator.clipboard.writeText(this.textContent);
                        
                        // Show tooltip
                        const tooltip = document.createElement('div');
                        tooltip.className = 'copy-tooltip show';
                        tooltip.textContent = 'Copied!';
                        this.appendChild(tooltip);
                        
                        setTimeout(() => {
                            tooltip.remove();
                        }, 2000);
                        
                        showNotification('Endpoint URL copied to clipboard', 'success');
                    } catch (err) {
                        showNotification('Failed to copy URL', 'error');
                    }
                });
            });
        }

        // Initialize copy to clipboard functionality
        setTimeout(addCopyToClipboard, 1000);

        // Add keyboard shortcuts
        document.addEventListener('keydown', function(e) {
            // Ctrl/Cmd + Enter to test API
            if ((e.ctrlKey || e.metaKey) && e.key === 'Enter') {
                e.preventDefault();
                testCustomEndpoint();
            }
            
            // Ctrl/Cmd + R to refresh stats
            if ((e.ctrlKey || e.metaKey) && e.key === 'r') {
                e.preventDefault();
                loadApiStats();
                showNotification('API stats refreshed', 'info');
            }
        });

        // Add auto-refresh for stats
        setInterval(() => {
            loadApiStats();
        }, 60000); // Refresh every minute

        // Add initial loading animation
        window.addEventListener('load', function() {
            const elements = document.querySelectorAll('.api-stat-card, .api-endpoint-card, .api-testing-panel');
            elements.forEach((el, index) => {
                el.style.opacity = '0';
                el.style.transform = 'translateY(30px)';
                
                setTimeout(() => {
                    el.style.transition = 'all 0.6s cubic-bezier(0.34, 1.56, 0.64, 1)';
                    el.style.opacity = '1';
                    el.style.transform = 'translateY(0)';
                }, index * 100);
            });
        });

        // Add smooth scrolling
        document.documentElement.style.scrollBehavior = 'smooth';

        // Add performance monitoring
        window.addEventListener('load', function() {
            const loadTime = performance.now();
            console.log(`API dashboard loaded in ${Math.round(loadTime)}ms`);
        });

        // Add accessibility improvements
        function improveAccessibility() {
            // Add ARIA labels
            const mainContent = document.getElementById('mainContent');
            if (mainContent) {
                mainContent.setAttribute('aria-label', 'API and RSS Dashboard');
            }

            // Add focus management for buttons
            const buttons = document.querySelectorAll('.btn');
            buttons.forEach(button => {
                button.setAttribute('role', 'button');
                if (!button.getAttribute('tabindex')) {
                    button.setAttribute('tabindex', '0');
                }
            });

            // Add screen reader support for stats
            const statCards = document.querySelectorAll('.api-stat-card');
            statCards.forEach((card, index) => {
                card.setAttribute('role', 'status');
                card.setAttribute('aria-live', 'polite');
                card.setAttribute('aria-label', `API statistic ${index + 1}`);
            });
        }

        // Initialize accessibility improvements
        setTimeout(improveAccessibility, 500);

        // Add error boundary for API calls
        window.addEventListener('unhandledrejection', function(event) {
            console.error('Unhandled promise rejection:', event.reason);
            showNotification('An unexpected error occurred', 'error');
            event.preventDefault();
        });

        // Add connection monitoring
        function monitorConnection() {
            window.addEventListener('online', function() {
                showNotification('Connection restored', 'success');
                loadApiStats();
            });

            window.addEventListener('offline', function() {
                showNotification('Connection lost. API testing may be limited.', 'warning');
            });
        }

        // Initialize connection monitoring
        monitorConnection();

        // Enhanced endpoint testing with more options
        function testEndpointWithOptions(endpoint, options = {}) {
            const responseDiv = document.getElementById('apiResponse');
            responseDiv.textContent = 'Testing with custom options...';
            
            // This can be extended to support different HTTP methods, headers, etc.
            return testEndpoint(endpoint);
        }

        // Add tooltip functionality for better UX
        function addTooltips() {
            const tooltipElements = [
                { selector: '.api-method-badge.get', text: 'HTTP GET request - retrieves data' },
                { selector: '.api-method-badge.rss', text: 'RSS feed - XML format for syndication' },
                { selector: '.api-stat-card.videos', text: 'Total number of published videos available via API' },
                { selector: '.api-stat-card.views', text: 'Cumulative view count across all videos' },
                { selector: '.api-stat-card.categories', text: 'Number of video categories available' },
                { selector: '.api-stat-card.rss', text: 'RSS feed status and availability' }
            ];

            tooltipElements.forEach(({ selector, text }) => {
                const element = document.querySelector(selector);
                if (element) {
                    element.setAttribute('title', text);
                }
            });
        }

        // Initialize tooltips
        setTimeout(addTooltips, 1000);

        console.log('🎉 API dashboard fully initialized with all enhancements');

        // Export functions for external use
        window.apiDashboard = {
            testEndpoint,
            loadApiStats,
            formatNumber: formatNumberHelper
        };
    </script>
</body>
</html>
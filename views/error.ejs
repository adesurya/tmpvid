<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Server Error - Something Went Wrong</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, sans-serif;
            background: linear-gradient(135deg, #ff6b6b 0%, #ee5a52 50%, #ff8a80 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            overflow: hidden;
            position: relative;
        }

        /* Animated background particles */
        .particles {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            overflow: hidden;
            z-index: 1;
        }

        .particle {
            position: absolute;
            display: block;
            pointer-events: none;
            width: 6px;
            height: 6px;
            background: rgba(255, 255, 255, 0.15);
            border-radius: 50%;
            animation: float 12s infinite linear;
        }

        .error-particle {
            background: rgba(255, 255, 255, 0.2);
            width: 8px;
            height: 8px;
            animation: errorFloat 8s infinite ease-in-out;
        }

        @keyframes float {
            0% {
                opacity: 1;
                transform: translateY(100vh) rotate(0deg);
            }
            100% {
                opacity: 0;
                transform: translateY(-100px) rotate(360deg);
            }
        }

        @keyframes errorFloat {
            0%, 100% {
                opacity: 0.3;
                transform: translateY(0px) rotate(0deg) scale(1);
            }
            50% {
                opacity: 0.8;
                transform: translateY(-30px) rotate(180deg) scale(1.2);
            }
        }

        .error-container {
            text-align: center;
            color: white;
            z-index: 10;
            position: relative;
            max-width: 550px;
            padding: 2.5rem;
            background: rgba(255, 255, 255, 0.15);
            backdrop-filter: blur(25px);
            border-radius: 28px;
            border: 1px solid rgba(255, 255, 255, 0.25);
            box-shadow: 0 12px 40px 0 rgba(0, 0, 0, 0.2);
            animation: slideUp 0.9s ease-out;
        }

        @keyframes slideUp {
            from {
                opacity: 0;
                transform: translateY(60px) scale(0.9);
            }
            to {
                opacity: 1;
                transform: translateY(0) scale(1);
            }
        }

        .error-code {
            font-size: clamp(4rem, 12vw, 8rem);
            margin-bottom: 1.5rem;
            animation: shake 2s ease-in-out infinite;
            filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.3));
            position: relative;
        }

        @keyframes shake {
            0%, 100% {
                transform: translateX(0) rotate(0deg);
            }
            25% {
                transform: translateX(-5px) rotate(-2deg);
            }
            75% {
                transform: translateX(5px) rotate(2deg);
            }
        }

        .error-code::after {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 120%;
            height: 120%;
            background: radial-gradient(circle, rgba(255, 255, 255, 0.1) 0%, transparent 70%);
            transform: translate(-50%, -50%);
            border-radius: 50%;
            z-index: -1;
            animation: pulse 2s ease-in-out infinite;
        }

        @keyframes pulse {
            0%, 100% {
                transform: translate(-50%, -50%) scale(1);
                opacity: 0.5;
            }
            50% {
                transform: translate(-50%, -50%) scale(1.1);
                opacity: 0.8;
            }
        }

        .error-title {
            font-size: clamp(2rem, 5vw, 3rem);
            font-weight: 800;
            margin-bottom: 1.5rem;
            text-shadow: 0 3px 6px rgba(0, 0, 0, 0.3);
            background: linear-gradient(45deg, #ffffff, #ffcccb);
            -webkit-background-clip: text;
            background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .error-message {
            font-size: clamp(1.1rem, 3vw, 1.3rem);
            margin-bottom: 2.5rem;
            opacity: 0.95;
            line-height: 1.7;
            max-width: 450px;
            margin-left: auto;
            margin-right: auto;
            text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
        }

        .btn-container {
            display: flex;
            flex-direction: column;
            gap: 1.25rem;
            align-items: center;
        }

        .btn {
            display: inline-flex;
            align-items: center;
            gap: 0.875rem;
            padding: 1.125rem 2.25rem;
            background: linear-gradient(45deg, #ffffff, #f8f9fa);
            color: #d32f2f;
            text-decoration: none;
            border-radius: 50px;
            font-weight: 700;
            font-size: 1.1rem;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            box-shadow: 0 6px 20px 0 rgba(0, 0, 0, 0.15);
            position: relative;
            overflow: hidden;
            min-width: 180px;
            justify-content: center;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(211, 47, 47, 0.1), transparent);
            transition: left 0.6s;
        }

        .btn:hover::before {
            left: 100%;
        }

        .btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 30px 0 rgba(0, 0, 0, 0.25);
            background: linear-gradient(45deg, #f5f5f5, #ffffff);
        }

        .btn:active {
            transform: translateY(-1px);
        }

        .home-link a {
            color: rgba(255, 255, 255, 0.85);
            text-decoration: none;
            font-size: 1.05rem;
            font-weight: 600;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 0.75rem;
            padding: 1rem 2rem;
            border-radius: 30px;
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(15px);
            border: 1px solid rgba(255, 255, 255, 0.2);
            text-transform: uppercase;
            letter-spacing: 0.5px;
            font-size: 0.95rem;
        }

        .home-link a::before {
            content: '';
            position: absolute;
            inset: 0;
            border-radius: 30px;
            padding: 1px;
            background: linear-gradient(45deg, rgba(255,255,255,0.3), rgba(255,255,255,0.1));
            mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
            mask-composite: xor;
        }

        .home-link a:hover {
            color: white;
            background: rgba(255, 255, 255, 0.2);
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
        }

        /* Error-specific floating elements */
        .floating-icon {
            position: absolute;
            font-size: 2.5rem;
            color: rgba(255, 255, 255, 0.12);
            pointer-events: none;
            animation: floatIcon 7s ease-in-out infinite;
        }

        @keyframes floatIcon {
            0%, 100% {
                transform: translateY(0px) rotate(0deg) scale(1);
            }
            25% {
                transform: translateY(-15px) rotate(90deg) scale(1.1);
            }
            50% {
                transform: translateY(-25px) rotate(180deg) scale(0.9);
            }
            75% {
                transform: translateY(-15px) rotate(270deg) scale(1.1);
            }
        }

        .floating-icon:nth-child(1) {
            top: 8%;
            left: 8%;
            animation-delay: 0s;
        }

        .floating-icon:nth-child(2) {
            top: 15%;
            right: 12%;
            animation-delay: 1.5s;
        }

        .floating-icon:nth-child(3) {
            bottom: 12%;
            left: 15%;
            animation-delay: 0.8s;
        }

        .floating-icon:nth-child(4) {
            bottom: 18%;
            right: 8%;
            animation-delay: 2.2s;
        }

        .floating-icon:nth-child(5) {
            top: 50%;
            left: 5%;
            animation-delay: 3s;
        }

        .floating-icon:nth-child(6) {
            top: 45%;
            right: 6%;
            animation-delay: 1s;
        }

        /* Status indicator */
        .status-indicator {
            position: absolute;
            top: -15px;
            right: -15px;
            width: 30px;
            height: 30px;
            background: linear-gradient(45deg, #ff1744, #f50057);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 0.8rem;
            font-weight: bold;
            animation: blink 1.5s ease-in-out infinite;
            box-shadow: 0 0 20px rgba(255, 23, 68, 0.4);
        }

        @keyframes blink {
            0%, 100% { opacity: 1; }
            50% { opacity: 0.5; }
        }

        /* Mobile responsiveness */
        @media (max-width: 768px) {
            .error-container {
                margin: 1rem;
                padding: 2rem;
                border-radius: 24px;
            }

            .error-code {
                font-size: clamp(3rem, 15vw, 6rem);
            }

            .btn-container {
                gap: 1rem;
            }

            .btn {
                padding: 1rem 2rem;
                font-size: 1rem;
                min-width: 160px;
            }

            .home-link a {
                padding: 0.875rem 1.75rem;
                font-size: 0.9rem;
            }

            .floating-icon {
                font-size: 2rem;
            }
        }

        @media (max-width: 480px) {
            .error-container {
                padding: 1.5rem;
                margin: 0.5rem;
            }

            .error-message {
                margin-bottom: 2rem;
            }

            .floating-icon {
                font-size: 1.8rem;
            }

            .btn {
                padding: 0.875rem 1.75rem;
            }
        }

        /* Dark mode support */
        @media (prefers-color-scheme: dark) {
            body {
                background: linear-gradient(135deg, #c62828 0%, #b71c1c 50%, #d32f2f 100%);
            }
        }

        /* Loading animation for refresh */
        .refresh-btn {
            position: relative;
        }

        .refresh-btn.loading::after {
            content: '';
            position: absolute;
            width: 20px;
            height: 20px;
            margin: auto;
            border: 2px solid transparent;
            border-top-color: #d32f2f;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
    </style>
</head>
<body>
    <!-- Floating background particles -->
    <div class="particles" id="particles"></div>

    <!-- Floating icons for error theme -->
    <div class="floating-icon"><i class="fas fa-exclamation-triangle"></i></div>
    <div class="floating-icon"><i class="fas fa-server"></i></div>
    <div class="floating-icon"><i class="fas fa-bug"></i></div>
    <div class="floating-icon"><i class="fas fa-tools"></i></div>
    <div class="floating-icon"><i class="fas fa-cog"></i></div>
    <div class="floating-icon"><i class="fas fa-database"></i></div>

    <div class="error-container">
        <div class="status-indicator">!</div>
        
        <div class="error-code">⚠️</div>
        <h1 class="error-title">Server Error</h1>
        <p class="error-message">
            Something went wrong on our end. Our team has been notified and is working to fix this issue. Please try again in a few moments.
        </p>
        
        <div class="btn-container">
            <a href="#" class="btn refresh-btn" onclick="refreshPage(event)">
                <i class="fas fa-redo"></i>
                Try Again
            </a>
            
            <a href="/" class="btn">
                <i class="fas fa-home"></i>
                Go Home
            </a>
            
            <div class="home-link">
                <a href="/admin">
                    <i class="fas fa-user-shield"></i>
                    Admin Dashboard
                </a>
            </div>
        </div>
    </div>

    <script>
        // Create floating particles with error theme
        function createParticles() {
            const particlesContainer = document.getElementById('particles');
            const particleCount = 40;

            for (let i = 0; i < particleCount; i++) {
                const particle = document.createElement('div');
                const isErrorParticle = Math.random() < 0.3; // 30% chance for error particles
                
                particle.className = isErrorParticle ? 'particle error-particle' : 'particle';
                particle.style.left = Math.random() * 100 + '%';
                particle.style.animationDelay = Math.random() * 12 + 's';
                particle.style.animationDuration = (Math.random() * 8 + 8) + 's';
                
                particlesContainer.appendChild(particle);
            }
        }

        // Refresh page function with loading animation
        function refreshPage(event) {
            event.preventDefault();
            const btn = event.currentTarget;
            const icon = btn.querySelector('i');
            
            // Add loading state
            btn.classList.add('loading');
            icon.className = 'fas fa-spinner fa-spin';
            btn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Refreshing...';
            
            // Simulate refresh after 1.5 seconds
            setTimeout(() => {
                window.location.reload();
            }, 1500);
        }

        // Initialize particles when page loads
        document.addEventListener('DOMContentLoaded', createParticles);

        // Add smooth scroll behavior for better UX
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                if (this.getAttribute('href') === '#') return;
                e.preventDefault();
                const target = document.querySelector(this.getAttribute('href'));
                if (target) {
                    target.scrollIntoView({
                        behavior: 'smooth',
                        block: 'start'
                    });
                }
            });
        });

        // Add click animation to buttons
        document.querySelectorAll('.btn, .home-link a').forEach(button => {
            button.addEventListener('click', function(e) {
                if (this.classList.contains('refresh-btn')) return; // Skip for refresh button
                
                // Create ripple effect
                const ripple = document.createElement('span');
                const rect = this.getBoundingClientRect();
                const size = Math.max(rect.width, rect.height);
                const x = e.clientX - rect.left - size / 2;
                const y = e.clientY - rect.top - size / 2;
                
                ripple.style.cssText = `
                    position: absolute;
                    border-radius: 50%;
                    background: rgba(255, 255, 255, 0.6);
                    transform: scale(0);
                    animation: ripple 0.6s linear;
                    width: ${size}px;
                    height: ${size}px;
                    left: ${x}px;
                    top: ${y}px;
                    pointer-events: none;
                `;
                
                this.appendChild(ripple);
                
                setTimeout(() => {
                    ripple.remove();
                }, 600);
            });
        });

        // Add ripple animation CSS
        const rippleStyle = document.createElement('style');
        rippleStyle.textContent = `
            @keyframes ripple {
                to {
                    transform: scale(2);
                    opacity: 0;
                }
            }
        `;
        document.head.appendChild(rippleStyle);

        // Error reporting (optional)
        function reportError() {
            // You can implement error reporting logic here
            console.log('Error reported to monitoring system');
        }

        // Auto-refresh attempt after 30 seconds (optional)
        let autoRefreshTimer;
        function startAutoRefresh() {
            autoRefreshTimer = setTimeout(() => {
                console.log('Attempting auto-refresh...');
                window.location.reload();
            }, 30000); // 30 seconds
        }

        // Uncomment the line below to enable auto-refresh
        // startAutoRefresh();
    </script>
</body>
</html>